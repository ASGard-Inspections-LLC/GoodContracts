{
  "contractName": "FormulaHolder",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "contract AbstractFees",
          "name": "_formula",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "formula",
      "outputs": [
        {
          "internalType": "contract AbstractFees",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "isOwner",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "contract AbstractFees",
          "name": "_formula",
          "type": "address"
        }
      ],
      "name": "setFormula",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.16+commit.9c3226ce\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract AbstractFees\",\"name\":\"_formula\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"constant\":true,\"inputs\":[],\"name\":\"formula\",\"outputs\":[{\"internalType\":\"contract AbstractFees\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"isOwner\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"contract AbstractFees\",\"name\":\"_formula\",\"type\":\"address\"}],\"name\":\"setFormula\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{\"isOwner()\":{\"return\":\"true if `msg.sender` is the owner of the contract.\"},\"owner()\":{\"return\":\"the address of the owner.\"},\"renounceOwnership()\":{\"details\":\"Allows the current owner to relinquish control of the contract.\"},\"transferOwnership(address)\":{\"details\":\"Allows the current owner to transfer control of the contract to a newOwner.\",\"params\":{\"newOwner\":\"The address to transfer ownership to.\"}}}},\"userdoc\":{\"methods\":{\"renounceOwnership()\":{\"notice\":\"Renouncing to ownership will leave the contract without an owner. It will not be possible to call the functions with the `onlyOwner` modifier anymore.\"}}}},\"settings\":{\"compilationTarget\":{\"/Users/hadar/workspace/GoodDollar/GoodBootstrap/packages/contracts/contracts/dao/schemes/FormulaHolder.sol\":\"FormulaHolder\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"/Users/hadar/workspace/GoodDollar/GoodBootstrap/packages/contracts/contracts/dao/schemes/FeeFormula.sol\":{\"keccak256\":\"0x2ac93f891a65aa60b93e2b27552850dfa459b88f5a19edc29bb5bab0cc4f3eaa\",\"urls\":[\"bzz-raw://bddb94bc0230d959d2362887a253a47b91f0de6804cba8e4569a7cac47c39b5a\",\"dweb:/ipfs/QmTdkPQHRdzxJ7D7pi9cowLgYY9wVja416dhBwCsdtPEv5\"]},\"/Users/hadar/workspace/GoodDollar/GoodBootstrap/packages/contracts/contracts/dao/schemes/FormulaHolder.sol\":{\"keccak256\":\"0xb3c0d3bc21e71497784e1be11698ff501ee11545c3106bec2cae2e8af1bacd9b\",\"urls\":[\"bzz-raw://783b4e28b67231de0fbbe48e58f43f69db3f98fd7f75668edce145a55a9b5b17\",\"dweb:/ipfs/QmdeyRfeix3PGfaXqtRQpH1sjmjFpdtuGaPwnvRn7nHAWd\"]},\"/Users/hadar/workspace/GoodDollar/GoodBootstrap/packages/contracts/contracts/dao/schemes/SchemeGuard.sol\":{\"keccak256\":\"0x32e1b2a172e2c22a6aa757bfcb0722cc67f64c5c2e48df3dec2737903516d565\",\"urls\":[\"bzz-raw://bee57a8eba08348e93a0c18f3ab534e67865c0fa27afe27f5cf234bd5f248915\",\"dweb:/ipfs/Qmd8aveHWcUkYWMyJrJRZPyVXj8MAMBfpBFo6g4Z2VJeo3\"]},\"@daostack/arc/contracts/controller/Avatar.sol\":{\"keccak256\":\"0x4e4fb9d3bc21f42fbfc6a01e9f8aa483a59e9f447b0d604f55b587a81ec09ef4\",\"urls\":[\"bzz-raw://9d3c1c7575cf6075ea1d89921f09b9b8e322b208dacaf0446cd4f64506c999f0\",\"dweb:/ipfs/QmVGDDHAR2ByuQpbgV7BBKXGEAcbaWvejpEZYzHgaagBFK\"]},\"@daostack/arc/contracts/controller/ControllerInterface.sol\":{\"keccak256\":\"0x933e92612c90f292c7b59908958b003f1a13d90b97bed0572b566353c20974dc\",\"urls\":[\"bzz-raw://ce1fcf85b744fcce2dbd4205e3943e9b4ec36a5f0330d4bbf61e65f1a3e0e470\",\"dweb:/ipfs/QmUWiLkBDdekhpy93nTzBtxDHL6yNh6sTUM9G8VbsHcBzy\"]},\"@daostack/arc/contracts/controller/DAOToken.sol\":{\"keccak256\":\"0x9b213e4e3ceeffcfc1c962a43b70b8d763d8091a2dd713fc1989b97bb68786e6\",\"urls\":[\"bzz-raw://51d1d6e85fd90f45395a16b7a3c703c4636e836041f2a13f806e4222ef2e59c1\",\"dweb:/ipfs/QmQjeCeFf7TJzsYjT5scyZUDDixBA8Yy8YppgBuxcKPDnP\"]},\"@daostack/arc/contracts/globalConstraints/GlobalConstraintInterface.sol\":{\"keccak256\":\"0xc006c4591ec10b845a56e13f6791db2c428610953034686d52b2a934b6c8f36f\",\"urls\":[\"bzz-raw://19495cd88280e54d7ddcd043ffeff75e6d3777a0c42debcd61cae448e9497ea0\",\"dweb:/ipfs/QmYxWz7CgFmmddrcVXJKfob5Ktwykc2imNVUwLSR5WR8bJ\"]},\"@daostack/arc/contracts/libs/SafeERC20.sol\":{\"keccak256\":\"0xf6727d432f67046145b078f40c1cc4f6be7b0d12a6678ecaf457edf7550d244c\",\"urls\":[\"bzz-raw://5dba7734c4fed446c084a707761cbc66ba22b8b93ef53c8d4a22a76b6e271690\",\"dweb:/ipfs/QmP2VpPKUqLh4ZZs6LaxHVpCN1zCmiorygL9bMub4mbYCw\"]},\"@daostack/infra/contracts/Reputation.sol\":{\"keccak256\":\"0x3d226dac0fe7d758f0287fb28bc25fcec1f69d19888ae3a550fa49856d61c482\",\"urls\":[\"bzz-raw://8856852c8fe0ba1c9aab326f0a9a6e7f31a238de2778fa5188e6fc399f7eb352\",\"dweb:/ipfs/QmVH4ppR9Dk7v8yxaSgeArdMv9gBBVoQxEf4E3UsqQ4rY2\"]},\"openzeppelin-solidity/contracts/math/SafeMath.sol\":{\"keccak256\":\"0x965012d27b4262d7a41f5028cbb30c51ebd9ecd4be8fb30380aaa7a3c64fbc8b\",\"urls\":[\"bzz-raw://1eb493553b27efd46c231a836a83ce50d215639feb97b4aac9f301d0fd034ff5\",\"dweb:/ipfs/QmbMdvSXcqGKxeeYvzF3VrWpoHQyVzMXBhzhAokF2Gdymv\"]},\"openzeppelin-solidity/contracts/ownership/Ownable.sol\":{\"keccak256\":\"0x980de387a1a020a498f53d00f89fecebb12c949a17e8f160093c0303ede2b786\",\"urls\":[\"bzz-raw://f07a2c393caa85f62f0aaa461e3edd50aa59371d4209778ba0558d7f8b4b856c\",\"dweb:/ipfs/QmeN3ZiYGSjCnQFeYaJNgoXjF9eDue1g3e9pqManRkeBtV\"]},\"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xba431353cb4fe70777ac026231eb5468e41aa1e81240a2b8136917acc5fff4dc\",\"urls\":[\"bzz-raw://f40c91ca270bdc9b156f339081a0fc2bbcf73cf5f62b8c73ba555df753ff6619\",\"dweb:/ipfs/QmT8y2VVjGaFdGphpcXrgvdPi2EgF9LuCDgJiJ89LvpFRV\"]},\"openzeppelin-solidity/contracts/token/ERC20/ERC20Burnable.sol\":{\"keccak256\":\"0xa3e68fd7f987c8fbdaf4867d428a69a15f3cf2f69709a5b0a0fbef750b0e6fbc\",\"urls\":[\"bzz-raw://50b1ff986d3b2793850a66c8429d9886fdfb134b1509b3e98714e3e2a71e24f5\",\"dweb:/ipfs/QmSQBYPeY9tbR3ciGRNQqvcWKnNiuxtVMq2MsPWpLwuGGm\"]},\"openzeppelin-solidity/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x079c4e23ee448f529e43bfa3c4e8fb4be52cd0318ee923a276835bedf45b93d8\",\"urls\":[\"bzz-raw://ee762ff5b7746e41d27dcbcea00c7a3034b58adb1b45ddadddb5b721aff450df\",\"dweb:/ipfs/QmdxqtgEFZjHCoiYyz6pUAQ5iBm7As25jcyEbZoTaAgyDa\"]},\"openzeppelin-solidity/contracts/utils/Address.sol\":{\"keccak256\":\"0x5c731061b804fa256fc8c05150eafe5d20b6bb94541a8f187912bf84f7033f34\",\"urls\":[\"bzz-raw://a3c2d9f046beebab7fb41b1b124a6a124a36f510f7c67365861402ac831bdc71\",\"dweb:/ipfs/QmUtASRgitregbKH83anopLtF9vFQe3BKeAjhUa6F7t9YV\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b506040516103ef3803806103ef8339818101604052602081101561003357600080fd5b5051600080546001600160a01b03191633178082556040516001600160a01b039190911691907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a36001600160a01b0381166100d9576040805162461bcd60e51b815260206004820152601860248201527f537570706c69656420666f726d756c61206973206e756c6c0000000000000000604482015290519081900360640190fd5b600180546001600160a01b0319166001600160a01b03929092169190911790556102e7806101086000396000f3fe608060405234801561001057600080fd5b50600436106100625760003560e01c80634b75f54f14610067578063715018a61461008b5780638da5cb5b146100955780638f32d59b1461009d578063ecc06c76146100b9578063f2fde38b146100df575b600080fd5b61006f610105565b604080516001600160a01b039092168252519081900360200190f35b610093610114565b005b61006f61016f565b6100a561017e565b604080519115158252519081900360200190f35b610093600480360360208110156100cf57600080fd5b50356001600160a01b031661018f565b610093600480360360208110156100f557600080fd5b50356001600160a01b0316610227565b6001546001600160a01b031681565b61011c61017e565b61012557600080fd5b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b6000546001600160a01b031690565b6000546001600160a01b0316331490565b61019761017e565b6101a057600080fd5b806001600160a01b031663223668446040518163ffffffff1660e01b815260040160206040518083038186803b1580156101d957600080fd5b505afa1580156101ed573d6000803e3d6000fd5b505050506040513d602081101561020357600080fd5b5050600180546001600160a01b0319166001600160a01b0392909216919091179055565b61022f61017e565b61023857600080fd5b61024181610244565b50565b6001600160a01b03811661025757600080fd5b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b039290921691909117905556fea265627a7a72315820dfd372e34abea26d0324eea6d9e07a5ace67672f0c3f1c281669022cd9d47e1564736f6c63430005100032",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100625760003560e01c80634b75f54f14610067578063715018a61461008b5780638da5cb5b146100955780638f32d59b1461009d578063ecc06c76146100b9578063f2fde38b146100df575b600080fd5b61006f610105565b604080516001600160a01b039092168252519081900360200190f35b610093610114565b005b61006f61016f565b6100a561017e565b604080519115158252519081900360200190f35b610093600480360360208110156100cf57600080fd5b50356001600160a01b031661018f565b610093600480360360208110156100f557600080fd5b50356001600160a01b0316610227565b6001546001600160a01b031681565b61011c61017e565b61012557600080fd5b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b6000546001600160a01b031690565b6000546001600160a01b0316331490565b61019761017e565b6101a057600080fd5b806001600160a01b031663223668446040518163ffffffff1660e01b815260040160206040518083038186803b1580156101d957600080fd5b505afa1580156101ed573d6000803e3d6000fd5b505050506040513d602081101561020357600080fd5b5050600180546001600160a01b0319166001600160a01b0392909216919091179055565b61022f61017e565b61023857600080fd5b61024181610244565b50565b6001600160a01b03811661025757600080fd5b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b039290921691909117905556fea265627a7a72315820dfd372e34abea26d0324eea6d9e07a5ace67672f0c3f1c281669022cd9d47e1564736f6c63430005100032",
  "sourceMap": "204:684:14:-;;;409:151;8:9:-1;5:2;;;30:1;27;20:12;5:2;409:151:14;;;;;;;;;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;409:151:14;515:6:72;:19;;-1:-1:-1;;;;;;515:19:72;524:10;515:19;;;;549:40;;-1:-1:-1;;;;;582:6:72;;;;;515;549:40;;515:6;;549:40;-1:-1:-1;;;;;469:27:14;;461:64;;;;;-1:-1:-1;;;461:64:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;535:7;:18;;-1:-1:-1;;;;;;535:18:14;-1:-1:-1;;;;;535:18:14;;;;;;;;;;204:684;;;-1:-1:-1;204:684:14;;",
  "deployedSourceMap": "204:684:14:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;204:684:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;244:27;;;:::i;:::-;;;;-1:-1:-1;;;;;244:27:14;;;;;;;;;;;;;;1347:137:72;;;:::i;:::-;;659:77;;;:::i;979:90::-;;;:::i;:::-;;;;;;;;;;;;;;;;;;758:128:14;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;758:128:14;-1:-1:-1;;;;;758:128:14;;:::i;1655:107:72:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1655:107:72;-1:-1:-1;;;;;1655:107:72;;:::i;244:27:14:-;;;-1:-1:-1;;;;;244:27:14;;:::o;1347:137:72:-;863:9;:7;:9::i;:::-;855:18;;;;;;1445:1;1429:6;;1408:40;;-1:-1:-1;;;;;1429:6:72;;;;1408:40;;1445:1;;1408:40;1475:1;1458:19;;-1:-1:-1;;;;;;1458:19:72;;;1347:137::o;659:77::-;697:7;723:6;-1:-1:-1;;;;;723:6:72;659:77;:::o;979:90::-;1019:4;1056:6;-1:-1:-1;;;;;1056:6:72;1042:10;:20;;979:90::o;758:128:14:-;863:9:72;:7;:9::i;:::-;855:18;;;;;;828:8:14;-1:-1:-1;;;;;828:21:14;;:23;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;828:23:14;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;828:23:14;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;861:7:14;:18;;-1:-1:-1;;;;;;861:18:14;-1:-1:-1;;;;;861:18:14;;;;;;;;;;758:128::o;1655:107:72:-;863:9;:7;:9::i;:::-;855:18;;;;;;1727:28;1746:8;1727:18;:28::i;:::-;1655:107;:::o;1906:183::-;-1:-1:-1;;;;;1979:22:72;;1971:31;;;;;;2038:6;;;2017:38;;-1:-1:-1;;;;;2017:38:72;;;;2038:6;;;2017:38;;;2065:6;:17;;-1:-1:-1;;;;;;2065:17:72;-1:-1:-1;;;;;2065:17:72;;;;;;;;;;1906:183::o",
  "source": "pragma solidity >0.5.4;\n\nimport \"openzeppelin-solidity/contracts/ownership/Ownable.sol\";\nimport \"./FeeFormula.sol\";\n\n/* @title Contract in charge of setting registered fee formula schemes to contract\n */\ncontract FormulaHolder is Ownable {\n    AbstractFees public formula;\n\n    /* @dev Constructor. Requires that given formula is a valid contract.\n     * @param _formula The fee formula contract.\n     */\n    constructor(AbstractFees _formula) public {\n        require(_formula != AbstractFees(0), \"Supplied formula is null\");\n        formula = _formula;\n    }\n\n    /* @dev Sets the given fee formula contract. Is only callable by owner.\n     * Reverts if formula has not been registered by DAO.\n     * @param _formula the new fee formula scheme\n     */\n    function setFormula(AbstractFees _formula) public onlyOwner {\n        _formula.isRegistered();\n        formula = _formula;\n    }\n}\n",
  "sourcePath": "/Users/hadar/workspace/GoodDollar/GoodBootstrap/packages/contracts/contracts/dao/schemes/FormulaHolder.sol",
  "ast": {
    "absolutePath": "/Users/hadar/workspace/GoodDollar/GoodBootstrap/packages/contracts/contracts/dao/schemes/FormulaHolder.sol",
    "exportedSymbols": {
      "FormulaHolder": [
        3013
      ]
    },
    "id": 3014,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 2970,
        "literals": [
          "solidity",
          ">",
          "0.5",
          ".4"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:14"
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/ownership/Ownable.sol",
        "file": "openzeppelin-solidity/contracts/ownership/Ownable.sol",
        "id": 2971,
        "nodeType": "ImportDirective",
        "scope": 3014,
        "sourceUnit": 17254,
        "src": "25:63:14",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/hadar/workspace/GoodDollar/GoodBootstrap/packages/contracts/contracts/dao/schemes/FeeFormula.sol",
        "file": "./FeeFormula.sol",
        "id": 2972,
        "nodeType": "ImportDirective",
        "scope": 3014,
        "sourceUnit": 2634,
        "src": "89:26:14",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 2973,
              "name": "Ownable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 17253,
              "src": "230:7:14",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Ownable_$17253",
                "typeString": "contract Ownable"
              }
            },
            "id": 2974,
            "nodeType": "InheritanceSpecifier",
            "src": "230:7:14"
          }
        ],
        "contractDependencies": [
          17253
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 3013,
        "linearizedBaseContracts": [
          3013,
          17253
        ],
        "name": "FormulaHolder",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 2976,
            "name": "formula",
            "nodeType": "VariableDeclaration",
            "scope": 3013,
            "src": "244:27:14",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_AbstractFees_$2581",
              "typeString": "contract AbstractFees"
            },
            "typeName": {
              "contractScope": null,
              "id": 2975,
              "name": "AbstractFees",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2581,
              "src": "244:12:14",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_AbstractFees_$2581",
                "typeString": "contract AbstractFees"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2994,
              "nodeType": "Block",
              "src": "451:109:14",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_contract$_AbstractFees_$2581",
                          "typeString": "contract AbstractFees"
                        },
                        "id": 2986,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 2982,
                          "name": "_formula",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2978,
                          "src": "469:8:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_AbstractFees_$2581",
                            "typeString": "contract AbstractFees"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 2984,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "494:1:14",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 2983,
                            "name": "AbstractFees",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2581,
                            "src": "481:12:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_AbstractFees_$2581_$",
                              "typeString": "type(contract AbstractFees)"
                            }
                          },
                          "id": 2985,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "481:15:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_AbstractFees_$2581",
                            "typeString": "contract AbstractFees"
                          }
                        },
                        "src": "469:27:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "537570706c69656420666f726d756c61206973206e756c6c",
                        "id": 2987,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "498:26:14",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_21fb992c59e983345337aad14a0eea0346704404979158276789e83b73ba8546",
                          "typeString": "literal_string \"Supplied formula is null\""
                        },
                        "value": "Supplied formula is null"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_21fb992c59e983345337aad14a0eea0346704404979158276789e83b73ba8546",
                          "typeString": "literal_string \"Supplied formula is null\""
                        }
                      ],
                      "id": 2981,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        18010,
                        18011
                      ],
                      "referencedDeclaration": 18011,
                      "src": "461:7:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2988,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "461:64:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2989,
                  "nodeType": "ExpressionStatement",
                  "src": "461:64:14"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2992,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 2990,
                      "name": "formula",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2976,
                      "src": "535:7:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_AbstractFees_$2581",
                        "typeString": "contract AbstractFees"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 2991,
                      "name": "_formula",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2978,
                      "src": "545:8:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_AbstractFees_$2581",
                        "typeString": "contract AbstractFees"
                      }
                    },
                    "src": "535:18:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_AbstractFees_$2581",
                      "typeString": "contract AbstractFees"
                    }
                  },
                  "id": 2993,
                  "nodeType": "ExpressionStatement",
                  "src": "535:18:14"
                }
              ]
            },
            "documentation": null,
            "id": 2995,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2979,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2978,
                  "name": "_formula",
                  "nodeType": "VariableDeclaration",
                  "scope": 2995,
                  "src": "421:21:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_AbstractFees_$2581",
                    "typeString": "contract AbstractFees"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 2977,
                    "name": "AbstractFees",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 2581,
                    "src": "421:12:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_AbstractFees_$2581",
                      "typeString": "contract AbstractFees"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "420:23:14"
            },
            "returnParameters": {
              "id": 2980,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "451:0:14"
            },
            "scope": 3013,
            "src": "409:151:14",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 3011,
              "nodeType": "Block",
              "src": "818:68:14",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "argumentTypes": null,
                        "id": 3002,
                        "name": "_formula",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2997,
                        "src": "828:8:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AbstractFees_$2581",
                          "typeString": "contract AbstractFees"
                        }
                      },
                      "id": 3004,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "isRegistered",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4149,
                      "src": "828:21:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_bool_$",
                        "typeString": "function () view external returns (bool)"
                      }
                    },
                    "id": 3005,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "828:23:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 3006,
                  "nodeType": "ExpressionStatement",
                  "src": "828:23:14"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 3009,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 3007,
                      "name": "formula",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2976,
                      "src": "861:7:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_AbstractFees_$2581",
                        "typeString": "contract AbstractFees"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 3008,
                      "name": "_formula",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2997,
                      "src": "871:8:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_AbstractFees_$2581",
                        "typeString": "contract AbstractFees"
                      }
                    },
                    "src": "861:18:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_AbstractFees_$2581",
                      "typeString": "contract AbstractFees"
                    }
                  },
                  "id": 3010,
                  "nodeType": "ExpressionStatement",
                  "src": "861:18:14"
                }
              ]
            },
            "documentation": null,
            "id": 3012,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 3000,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 2999,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 17187,
                  "src": "808:9:14",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "808:9:14"
              }
            ],
            "name": "setFormula",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2998,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2997,
                  "name": "_formula",
                  "nodeType": "VariableDeclaration",
                  "scope": 3012,
                  "src": "778:21:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_AbstractFees_$2581",
                    "typeString": "contract AbstractFees"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 2996,
                    "name": "AbstractFees",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 2581,
                    "src": "778:12:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_AbstractFees_$2581",
                      "typeString": "contract AbstractFees"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "777:23:14"
            },
            "returnParameters": {
              "id": 3001,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "818:0:14"
            },
            "scope": 3013,
            "src": "758:128:14",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 3014,
        "src": "204:684:14"
      }
    ],
    "src": "0:889:14"
  },
  "legacyAST": {
    "absolutePath": "/Users/hadar/workspace/GoodDollar/GoodBootstrap/packages/contracts/contracts/dao/schemes/FormulaHolder.sol",
    "exportedSymbols": {
      "FormulaHolder": [
        3013
      ]
    },
    "id": 3014,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 2970,
        "literals": [
          "solidity",
          ">",
          "0.5",
          ".4"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:14"
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/ownership/Ownable.sol",
        "file": "openzeppelin-solidity/contracts/ownership/Ownable.sol",
        "id": 2971,
        "nodeType": "ImportDirective",
        "scope": 3014,
        "sourceUnit": 17254,
        "src": "25:63:14",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/hadar/workspace/GoodDollar/GoodBootstrap/packages/contracts/contracts/dao/schemes/FeeFormula.sol",
        "file": "./FeeFormula.sol",
        "id": 2972,
        "nodeType": "ImportDirective",
        "scope": 3014,
        "sourceUnit": 2634,
        "src": "89:26:14",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 2973,
              "name": "Ownable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 17253,
              "src": "230:7:14",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Ownable_$17253",
                "typeString": "contract Ownable"
              }
            },
            "id": 2974,
            "nodeType": "InheritanceSpecifier",
            "src": "230:7:14"
          }
        ],
        "contractDependencies": [
          17253
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 3013,
        "linearizedBaseContracts": [
          3013,
          17253
        ],
        "name": "FormulaHolder",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 2976,
            "name": "formula",
            "nodeType": "VariableDeclaration",
            "scope": 3013,
            "src": "244:27:14",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_AbstractFees_$2581",
              "typeString": "contract AbstractFees"
            },
            "typeName": {
              "contractScope": null,
              "id": 2975,
              "name": "AbstractFees",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2581,
              "src": "244:12:14",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_AbstractFees_$2581",
                "typeString": "contract AbstractFees"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2994,
              "nodeType": "Block",
              "src": "451:109:14",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_contract$_AbstractFees_$2581",
                          "typeString": "contract AbstractFees"
                        },
                        "id": 2986,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 2982,
                          "name": "_formula",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2978,
                          "src": "469:8:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_AbstractFees_$2581",
                            "typeString": "contract AbstractFees"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 2984,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "494:1:14",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 2983,
                            "name": "AbstractFees",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2581,
                            "src": "481:12:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_AbstractFees_$2581_$",
                              "typeString": "type(contract AbstractFees)"
                            }
                          },
                          "id": 2985,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "481:15:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_AbstractFees_$2581",
                            "typeString": "contract AbstractFees"
                          }
                        },
                        "src": "469:27:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "537570706c69656420666f726d756c61206973206e756c6c",
                        "id": 2987,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "498:26:14",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_21fb992c59e983345337aad14a0eea0346704404979158276789e83b73ba8546",
                          "typeString": "literal_string \"Supplied formula is null\""
                        },
                        "value": "Supplied formula is null"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_21fb992c59e983345337aad14a0eea0346704404979158276789e83b73ba8546",
                          "typeString": "literal_string \"Supplied formula is null\""
                        }
                      ],
                      "id": 2981,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        18010,
                        18011
                      ],
                      "referencedDeclaration": 18011,
                      "src": "461:7:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2988,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "461:64:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2989,
                  "nodeType": "ExpressionStatement",
                  "src": "461:64:14"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2992,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 2990,
                      "name": "formula",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2976,
                      "src": "535:7:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_AbstractFees_$2581",
                        "typeString": "contract AbstractFees"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 2991,
                      "name": "_formula",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2978,
                      "src": "545:8:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_AbstractFees_$2581",
                        "typeString": "contract AbstractFees"
                      }
                    },
                    "src": "535:18:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_AbstractFees_$2581",
                      "typeString": "contract AbstractFees"
                    }
                  },
                  "id": 2993,
                  "nodeType": "ExpressionStatement",
                  "src": "535:18:14"
                }
              ]
            },
            "documentation": null,
            "id": 2995,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2979,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2978,
                  "name": "_formula",
                  "nodeType": "VariableDeclaration",
                  "scope": 2995,
                  "src": "421:21:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_AbstractFees_$2581",
                    "typeString": "contract AbstractFees"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 2977,
                    "name": "AbstractFees",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 2581,
                    "src": "421:12:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_AbstractFees_$2581",
                      "typeString": "contract AbstractFees"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "420:23:14"
            },
            "returnParameters": {
              "id": 2980,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "451:0:14"
            },
            "scope": 3013,
            "src": "409:151:14",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 3011,
              "nodeType": "Block",
              "src": "818:68:14",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "argumentTypes": null,
                        "id": 3002,
                        "name": "_formula",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2997,
                        "src": "828:8:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AbstractFees_$2581",
                          "typeString": "contract AbstractFees"
                        }
                      },
                      "id": 3004,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "isRegistered",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4149,
                      "src": "828:21:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_bool_$",
                        "typeString": "function () view external returns (bool)"
                      }
                    },
                    "id": 3005,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "828:23:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 3006,
                  "nodeType": "ExpressionStatement",
                  "src": "828:23:14"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 3009,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 3007,
                      "name": "formula",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2976,
                      "src": "861:7:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_AbstractFees_$2581",
                        "typeString": "contract AbstractFees"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 3008,
                      "name": "_formula",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2997,
                      "src": "871:8:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_AbstractFees_$2581",
                        "typeString": "contract AbstractFees"
                      }
                    },
                    "src": "861:18:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_AbstractFees_$2581",
                      "typeString": "contract AbstractFees"
                    }
                  },
                  "id": 3010,
                  "nodeType": "ExpressionStatement",
                  "src": "861:18:14"
                }
              ]
            },
            "documentation": null,
            "id": 3012,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 3000,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 2999,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 17187,
                  "src": "808:9:14",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "808:9:14"
              }
            ],
            "name": "setFormula",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2998,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2997,
                  "name": "_formula",
                  "nodeType": "VariableDeclaration",
                  "scope": 3012,
                  "src": "778:21:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_AbstractFees_$2581",
                    "typeString": "contract AbstractFees"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 2996,
                    "name": "AbstractFees",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 2581,
                    "src": "778:12:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_AbstractFees_$2581",
                      "typeString": "contract AbstractFees"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "777:23:14"
            },
            "returnParameters": {
              "id": 3001,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "818:0:14"
            },
            "scope": 3013,
            "src": "758:128:14",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 3014,
        "src": "204:684:14"
      }
    ],
    "src": "0:889:14"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.16+commit.9c3226ce.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.2.3",
  "updatedAt": "2022-10-27T11:34:11.135Z",
  "devdoc": {
    "methods": {
      "isOwner()": {
        "return": "true if `msg.sender` is the owner of the contract."
      },
      "owner()": {
        "return": "the address of the owner."
      },
      "renounceOwnership()": {
        "details": "Allows the current owner to relinquish control of the contract."
      },
      "transferOwnership(address)": {
        "details": "Allows the current owner to transfer control of the contract to a newOwner.",
        "params": {
          "newOwner": "The address to transfer ownership to."
        }
      }
    }
  },
  "userdoc": {
    "methods": {
      "renounceOwnership()": {
        "notice": "Renouncing to ownership will leave the contract without an owner. It will not be possible to call the functions with the `onlyOwner` modifier anymore."
      }
    }
  }
}