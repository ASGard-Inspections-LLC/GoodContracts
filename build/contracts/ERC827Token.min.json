{
  "contractName": "ERC827Token",
  "abi": [
    {
      "constant": false,
      "inputs": [
        {
          "name": "spender",
          "type": "address"
        },
        {
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "from",
          "type": "address"
        },
        {
          "name": "to",
          "type": "address"
        },
        {
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "spender",
          "type": "address"
        },
        {
          "name": "addedValue",
          "type": "uint256"
        }
      ],
      "name": "increaseAllowance",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "spender",
          "type": "address"
        },
        {
          "name": "subtractedValue",
          "type": "uint256"
        }
      ],
      "name": "decreaseAllowance",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "to",
          "type": "address"
        },
        {
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "owner",
          "type": "address"
        },
        {
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_spender",
          "type": "address"
        },
        {
          "name": "_value",
          "type": "uint256"
        },
        {
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "approveAndCall",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": true,
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_to",
          "type": "address"
        },
        {
          "name": "_value",
          "type": "uint256"
        },
        {
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "transferAndCall",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": true,
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_from",
          "type": "address"
        },
        {
          "name": "_to",
          "type": "address"
        },
        {
          "name": "_value",
          "type": "uint256"
        },
        {
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "transferFromAndCall",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": true,
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_spender",
          "type": "address"
        },
        {
          "name": "_addedValue",
          "type": "uint256"
        },
        {
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "increaseApprovalAndCall",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": true,
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_spender",
          "type": "address"
        },
        {
          "name": "_subtractedValue",
          "type": "uint256"
        },
        {
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "decreaseApprovalAndCall",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": true,
      "stateMutability": "payable",
      "type": "function"
    }
  ],
  "bytecode": "0x608060405234801561001057600080fd5b50610c42806100206000396000f3fe6080604052600436106100c45763ffffffff7c0100000000000000000000000000000000000000000000000000000000600035041663095ea7b381146100c957806318160ddd1461011657806323b872dd1461013d57806339509351146101805780634000aea0146101b957806370a082311461027457806390db623f146102a7578063a457c2d714610362578063a9059cbb1461039b578063c1d34b89146103d4578063cae9ca511461049a578063cb3993be14610555578063dd62ed3e14610610575b600080fd5b3480156100d557600080fd5b50610102600480360360408110156100ec57600080fd5b50600160a060020a03813516906020013561064b565b604080519115158252519081900360200190f35b34801561012257600080fd5b5061012b6106c9565b60408051918252519081900360200190f35b34801561014957600080fd5b506101026004803603606081101561016057600080fd5b50600160a060020a038135811691602081013590911690604001356106cf565b34801561018c57600080fd5b50610102600480360360408110156101a357600080fd5b50600160a060020a038135169060200135610798565b610102600480360360608110156101cf57600080fd5b600160a060020a03823516916020810135918101906060810160408201356401000000008111156101ff57600080fd5b82018360208201111561021157600080fd5b8035906020019184600183028401116401000000008311171561023357600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250929550610848945050505050565b34801561028057600080fd5b5061012b6004803603602081101561029757600080fd5b5035600160a060020a031661092a565b610102600480360360608110156102bd57600080fd5b600160a060020a03823516916020810135918101906060810160408201356401000000008111156102ed57600080fd5b8201836020820111156102ff57600080fd5b8035906020019184600183028401116401000000008311171561032157600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250929550610945945050505050565b34801561036e57600080fd5b506101026004803603604081101561038557600080fd5b50600160a060020a038135169060200135610967565b3480156103a757600080fd5b50610102600480360360408110156103be57600080fd5b50600160a060020a0381351690602001356109b2565b610102600480360360808110156103ea57600080fd5b600160a060020a0382358116926020810135909116916040820135919081019060808101606082013564010000000081111561042557600080fd5b82018360208201111561043757600080fd5b8035906020019184600183028401116401000000008311171561045957600080fd5b91908080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152509295506109c8945050505050565b610102600480360360608110156104b057600080fd5b600160a060020a03823516916020810135918101906060810160408201356401000000008111156104e057600080fd5b8201836020820111156104f257600080fd5b8035906020019184600183028401116401000000008311171561051457600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250929550610aac945050505050565b6101026004803603606081101561056b57600080fd5b600160a060020a038235169160208101359181019060608101604082013564010000000081111561059b57600080fd5b8201836020820111156105ad57600080fd5b803590602001918460018302840111640100000000831117156105cf57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250929550610ace945050505050565b34801561061c57600080fd5b5061012b6004803603604081101561063357600080fd5b50600160a060020a0381358116916020013516610af0565b6000600160a060020a038316151561066257600080fd5b336000818152600160209081526040808320600160a060020a03881680855290835292819020869055805186815290519293927f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925929181900390910190a350600192915050565b60025490565b600160a060020a0383166000908152600160209081526040808320338452909152812054610703908363ffffffff610b1b16565b600160a060020a0385166000908152600160209081526040808320338452909152902055610732848484610b30565b600160a060020a0384166000818152600160209081526040808320338085529083529281902054815190815290519293927f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925929181900390910190a35060019392505050565b6000600160a060020a03831615156107af57600080fd5b336000908152600160209081526040808320600160a060020a03871684529091529020546107e3908363ffffffff610bfd16565b336000818152600160209081526040808320600160a060020a0389168085529083529281902085905580519485525191937f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925929081900390910190a350600192915050565b6000600160a060020a03841630141561086057600080fd5b61086a84846109b2565b50600084600160a060020a031634846040518082805190602001908083835b602083106108a85780518252601f199092019160209182019101610889565b6001836020036101000a03801982511681845116808217855250505050505090500191505060006040518083038185875af1925050503d806000811461090a576040519150601f19603f3d011682016040523d82523d6000602084013e61090f565b606091505b5050905080151561091f57600080fd5b506001949350505050565b600160a060020a031660009081526020819052604090205490565b6000600160a060020a03841630141561095d57600080fd5b61086a8484610798565b6000600160a060020a038316151561097e57600080fd5b336000908152600160209081526040808320600160a060020a03871684529091529020546107e3908363ffffffff610b1b16565b60006109bf338484610b30565b50600192915050565b6000600160a060020a0384163014156109e057600080fd5b6109eb8585856106cf565b50600084600160a060020a031634846040518082805190602001908083835b60208310610a295780518252601f199092019160209182019101610a0a565b6001836020036101000a03801982511681845116808217855250505050505090500191505060006040518083038185875af1925050503d8060008114610a8b576040519150601f19603f3d011682016040523d82523d6000602084013e610a90565b606091505b50509050801515610aa057600080fd5b50600195945050505050565b6000600160a060020a038416301415610ac457600080fd5b61086a848461064b565b6000600160a060020a038416301415610ae657600080fd5b61086a8484610967565b600160a060020a03918216600090815260016020908152604080832093909416825291909152205490565b600082821115610b2a57600080fd5b50900390565b600160a060020a0382161515610b4557600080fd5b600160a060020a038316600090815260208190526040902054610b6e908263ffffffff610b1b16565b600160a060020a038085166000908152602081905260408082209390935590841681522054610ba3908263ffffffff610bfd16565b600160a060020a038084166000818152602081815260409182902094909455805185815290519193928716927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92918290030190a3505050565b600082820183811015610c0f57600080fd5b939250505056fea165627a7a72305820116b234c39a87adebccd260f3b8cce80431fa4c5d2cc1a5c916a9a6c0631cede0029",
  "deployedBytecode": "0x6080604052600436106100c45763ffffffff7c0100000000000000000000000000000000000000000000000000000000600035041663095ea7b381146100c957806318160ddd1461011657806323b872dd1461013d57806339509351146101805780634000aea0146101b957806370a082311461027457806390db623f146102a7578063a457c2d714610362578063a9059cbb1461039b578063c1d34b89146103d4578063cae9ca511461049a578063cb3993be14610555578063dd62ed3e14610610575b600080fd5b3480156100d557600080fd5b50610102600480360360408110156100ec57600080fd5b50600160a060020a03813516906020013561064b565b604080519115158252519081900360200190f35b34801561012257600080fd5b5061012b6106c9565b60408051918252519081900360200190f35b34801561014957600080fd5b506101026004803603606081101561016057600080fd5b50600160a060020a038135811691602081013590911690604001356106cf565b34801561018c57600080fd5b50610102600480360360408110156101a357600080fd5b50600160a060020a038135169060200135610798565b610102600480360360608110156101cf57600080fd5b600160a060020a03823516916020810135918101906060810160408201356401000000008111156101ff57600080fd5b82018360208201111561021157600080fd5b8035906020019184600183028401116401000000008311171561023357600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250929550610848945050505050565b34801561028057600080fd5b5061012b6004803603602081101561029757600080fd5b5035600160a060020a031661092a565b610102600480360360608110156102bd57600080fd5b600160a060020a03823516916020810135918101906060810160408201356401000000008111156102ed57600080fd5b8201836020820111156102ff57600080fd5b8035906020019184600183028401116401000000008311171561032157600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250929550610945945050505050565b34801561036e57600080fd5b506101026004803603604081101561038557600080fd5b50600160a060020a038135169060200135610967565b3480156103a757600080fd5b50610102600480360360408110156103be57600080fd5b50600160a060020a0381351690602001356109b2565b610102600480360360808110156103ea57600080fd5b600160a060020a0382358116926020810135909116916040820135919081019060808101606082013564010000000081111561042557600080fd5b82018360208201111561043757600080fd5b8035906020019184600183028401116401000000008311171561045957600080fd5b91908080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152509295506109c8945050505050565b610102600480360360608110156104b057600080fd5b600160a060020a03823516916020810135918101906060810160408201356401000000008111156104e057600080fd5b8201836020820111156104f257600080fd5b8035906020019184600183028401116401000000008311171561051457600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250929550610aac945050505050565b6101026004803603606081101561056b57600080fd5b600160a060020a038235169160208101359181019060608101604082013564010000000081111561059b57600080fd5b8201836020820111156105ad57600080fd5b803590602001918460018302840111640100000000831117156105cf57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250929550610ace945050505050565b34801561061c57600080fd5b5061012b6004803603604081101561063357600080fd5b50600160a060020a0381358116916020013516610af0565b6000600160a060020a038316151561066257600080fd5b336000818152600160209081526040808320600160a060020a03881680855290835292819020869055805186815290519293927f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925929181900390910190a350600192915050565b60025490565b600160a060020a0383166000908152600160209081526040808320338452909152812054610703908363ffffffff610b1b16565b600160a060020a0385166000908152600160209081526040808320338452909152902055610732848484610b30565b600160a060020a0384166000818152600160209081526040808320338085529083529281902054815190815290519293927f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925929181900390910190a35060019392505050565b6000600160a060020a03831615156107af57600080fd5b336000908152600160209081526040808320600160a060020a03871684529091529020546107e3908363ffffffff610bfd16565b336000818152600160209081526040808320600160a060020a0389168085529083529281902085905580519485525191937f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925929081900390910190a350600192915050565b6000600160a060020a03841630141561086057600080fd5b61086a84846109b2565b50600084600160a060020a031634846040518082805190602001908083835b602083106108a85780518252601f199092019160209182019101610889565b6001836020036101000a03801982511681845116808217855250505050505090500191505060006040518083038185875af1925050503d806000811461090a576040519150601f19603f3d011682016040523d82523d6000602084013e61090f565b606091505b5050905080151561091f57600080fd5b506001949350505050565b600160a060020a031660009081526020819052604090205490565b6000600160a060020a03841630141561095d57600080fd5b61086a8484610798565b6000600160a060020a038316151561097e57600080fd5b336000908152600160209081526040808320600160a060020a03871684529091529020546107e3908363ffffffff610b1b16565b60006109bf338484610b30565b50600192915050565b6000600160a060020a0384163014156109e057600080fd5b6109eb8585856106cf565b50600084600160a060020a031634846040518082805190602001908083835b60208310610a295780518252601f199092019160209182019101610a0a565b6001836020036101000a03801982511681845116808217855250505050505090500191505060006040518083038185875af1925050503d8060008114610a8b576040519150601f19603f3d011682016040523d82523d6000602084013e610a90565b606091505b50509050801515610aa057600080fd5b50600195945050505050565b6000600160a060020a038416301415610ac457600080fd5b61086a848461064b565b6000600160a060020a038416301415610ae657600080fd5b61086a8484610967565b600160a060020a03918216600090815260016020908152604080832093909416825291909152205490565b600082821115610b2a57600080fd5b50900390565b600160a060020a0382161515610b4557600080fd5b600160a060020a038316600090815260208190526040902054610b6e908263ffffffff610b1b16565b600160a060020a038085166000908152602081905260408082209390935590841681522054610ba3908263ffffffff610bfd16565b600160a060020a038084166000818152602081815260409182902094909455805185815290519193928716927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92918290030190a3505050565b600082820183811015610c0f57600080fd5b939250505056fea165627a7a72305820116b234c39a87adebccd260f3b8cce80431fa4c5d2cc1a5c916a9a6c0631cede0029",
  "sourceMap": "383:5223:19:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;383:5223:19;;;;;;;",
  "compiler": {
    "name": "solc",
    "version": "0.5.0+commit.1d4f565a.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.0.2",
  "updatedAt": "2019-03-07T09:52:41.675Z",
  "devdoc": {
    "details": "Implementation the ERC827, following the IERC20 standard with extra\r methods to transfer value and data and execute calls in transfers and\r approvals. Uses OpenZeppelin IERC20.\r",
    "methods": {
      "allowance(address,address)": {
        "details": "Function to check the amount of tokens that an owner allowed to a spender.",
        "params": {
          "owner": "address The address which owns the funds.",
          "spender": "address The address which will spend the funds."
        },
        "return": "A uint256 specifying the amount of tokens still available for the spender."
      },
      "approve(address,uint256)": {
        "details": "Approve the passed address to spend the specified amount of tokens on behalf of msg.sender. Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729",
        "params": {
          "spender": "The address which will spend the funds.",
          "value": "The amount of tokens to be spent."
        }
      },
      "approveAndCall(address,uint256,bytes)": {
        "details": "Addition to IERC20 token methods. It allows to\r approve the transfer of value and execute a call with the sent data.\r Beware that changing an allowance with this method brings the risk that\r someone may use both the old and the new allowance by unfortunate\r transaction ordering. One possible solution to mitigate this race condition\r is to first reduce the spender's allowance to 0 and set the desired value\r afterwards:\r https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\r",
        "params": {
          "_data": "ABI-encoded contract call to call `_spender` address.\r",
          "_spender": "The address that will spend the funds.\r",
          "_value": "The amount of tokens to be spent.\r"
        },
        "return": "true if the call function was executed successfully\r"
      },
      "balanceOf(address)": {
        "details": "Gets the balance of the specified address.",
        "params": {
          "owner": "The address to query the balance of."
        },
        "return": "An uint256 representing the amount owned by the passed address."
      },
      "decreaseAllowance(address,uint256)": {
        "details": "Decrease the amount of tokens that an owner allowed to a spender. approve should be called when allowed_[_spender] == 0. To decrement allowed value is better to use this function to avoid 2 calls (and wait until the first transaction is mined) From MonolithDAO Token.sol Emits an Approval event.",
        "params": {
          "spender": "The address which will spend the funds.",
          "subtractedValue": "The amount of tokens to decrease the allowance by."
        }
      },
      "decreaseApprovalAndCall(address,uint256,bytes)": {
        "details": "Addition to IERC20 methods. Decrease the amount of tokens that\r an owner allowed to a spender and execute a call with the sent data.\r approve should be called when allowed[_spender] == 0. To decrement\r allowed value is better to use this function to avoid 2 calls (and wait until\r the first transaction is mined)\r From MonolithDAO Token.sol\r",
        "params": {
          "_data": "ABI-encoded contract call to call `_spender` address.\r",
          "_spender": "The address which will spend the funds.\r",
          "_subtractedValue": "The amount of tokens to decrease the allowance by.\r"
        }
      },
      "increaseAllowance(address,uint256)": {
        "details": "Increase the amount of tokens that an owner allowed to a spender. approve should be called when allowed_[_spender] == 0. To increment allowed value is better to use this function to avoid 2 calls (and wait until the first transaction is mined) From MonolithDAO Token.sol Emits an Approval event.",
        "params": {
          "addedValue": "The amount of tokens to increase the allowance by.",
          "spender": "The address which will spend the funds."
        }
      },
      "increaseApprovalAndCall(address,uint256,bytes)": {
        "details": "Addition to IERC20 methods. Increase the amount of tokens that\r an owner allowed to a spender and execute a call with the sent data.\r approve should be called when allowed[_spender] == 0. To increment\r allowed value is better to use this function to avoid 2 calls (and wait until\r the first transaction is mined)\r From MonolithDAO Token.sol\r",
        "params": {
          "_addedValue": "The amount of tokens to increase the allowance by.\r",
          "_data": "ABI-encoded contract call to call `_spender` address.\r",
          "_spender": "The address which will spend the funds.\r"
        }
      },
      "totalSupply()": {
        "details": "Total number of tokens in existence"
      },
      "transfer(address,uint256)": {
        "details": "Transfer token for a specified address",
        "params": {
          "to": "The address to transfer to.",
          "value": "The amount to be transferred."
        }
      },
      "transferAndCall(address,uint256,bytes)": {
        "details": "Addition to IERC20 token methods. Transfer tokens to a specified\r address and execute a call with the sent data on the same transaction\r",
        "params": {
          "_data": "ABI-encoded contract call to call `_to` address.\r",
          "_to": "address The address which you want to transfer to\r",
          "_value": "uint256 the amout of tokens to be transfered\r"
        },
        "return": "true if the call function was executed successfully\r"
      },
      "transferFrom(address,address,uint256)": {
        "details": "Transfer tokens from one address to another. Note that while this function emits an Approval event, this is not required as per the specification, and other compliant implementations may not emit the event.",
        "params": {
          "from": "address The address which you want to send tokens from",
          "to": "address The address which you want to transfer to",
          "value": "uint256 the amount of tokens to be transferred"
        }
      },
      "transferFromAndCall(address,address,uint256,bytes)": {
        "details": "Addition to IERC20 token methods. Transfer tokens from one address to\r another and make a contract call on the same transaction\r",
        "params": {
          "_data": "ABI-encoded contract call to call `_to` address.\r",
          "_from": "The address which you want to send tokens from\r",
          "_to": "The address which you want to transfer to\r",
          "_value": "The amout of tokens to be transferred\r"
        },
        "return": "true if the call function was executed successfully\r"
      }
    },
    "title": "ERC827, an extension of IERC20 token standard\r "
  }
}
