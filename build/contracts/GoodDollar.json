{
  "contractName": "GoodDollar",
  "abi": [
    {
      "constant": true,
      "inputs": [],
      "name": "populatedMarket",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "spender",
          "type": "address"
        },
        {
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "from",
          "type": "address"
        },
        {
          "name": "to",
          "type": "address"
        },
        {
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "name": "",
          "type": "uint8"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "spender",
          "type": "address"
        },
        {
          "name": "addedValue",
          "type": "uint256"
        }
      ],
      "name": "increaseAllowance",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_to",
          "type": "address"
        },
        {
          "name": "_value",
          "type": "uint256"
        },
        {
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "transferAndCall",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": true,
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "to",
          "type": "address"
        },
        {
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "mint",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "burn",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "name": "last_claimed",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "from",
          "type": "address"
        },
        {
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "burnFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "isOwner",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_spender",
          "type": "address"
        },
        {
          "name": "_addedValue",
          "type": "uint256"
        },
        {
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "increaseApprovalAndCall",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": true,
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "account",
          "type": "address"
        }
      ],
      "name": "addMinter",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "renounceMinter",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "spender",
          "type": "address"
        },
        {
          "name": "subtractedValue",
          "type": "uint256"
        }
      ],
      "name": "decreaseAllowance",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "to",
          "type": "address"
        },
        {
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "account",
          "type": "address"
        }
      ],
      "name": "isMinter",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_from",
          "type": "address"
        },
        {
          "name": "_to",
          "type": "address"
        },
        {
          "name": "_value",
          "type": "uint256"
        },
        {
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "transferFromAndCall",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": true,
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_spender",
          "type": "address"
        },
        {
          "name": "_value",
          "type": "uint256"
        },
        {
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "approveAndCall",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": true,
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_spender",
          "type": "address"
        },
        {
          "name": "_subtractedValue",
          "type": "uint256"
        },
        {
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "decreaseApprovalAndCall",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": true,
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "owner",
          "type": "address"
        },
        {
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "name": "name",
          "type": "string"
        },
        {
          "name": "symbol",
          "type": "string"
        },
        {
          "name": "decimals",
          "type": "uint8"
        },
        {
          "name": "minters",
          "type": "address[]"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [],
      "name": "PopulatedMarket",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "account",
          "type": "address"
        }
      ],
      "name": "MinterAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "account",
          "type": "address"
        }
      ],
      "name": "MinterRemoved",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_gcm",
          "type": "address"
        }
      ],
      "name": "initialMove",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": "0x60806040526007805460a060020a60ff02191690553480156200002157600080fd5b5060405162001b3f38038062001b3f833981018060405260808110156200004757600080fd5b8101908080516401000000008111156200006057600080fd5b820160208101848111156200007457600080fd5b81516401000000008111828201871017156200008f57600080fd5b50509291906020018051640100000000811115620000ac57600080fd5b82016020810184811115620000c057600080fd5b8151640100000000811182820187101715620000db57600080fd5b505060208201516040909201805191949293916401000000008111156200010157600080fd5b820160208101848111156200011557600080fd5b81518560208202830111640100000000821117156200013357600080fd5b5050865190935086925085915084906200015590600390602086019062000375565b5081516200016b90600490602085019062000375565b506005805460ff191660ff92909216919091179055506200019790503364010000000062000236810204565b60078054600160a060020a031916331790819055604051600160a060020a0391909116906000907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a360005b81518110156200022b576200022282828151811015156200020357fe5b9060200190602002015162000288640100000000026401000000009004565b600101620001e6565b50505050506200041a565b620002516006826401000000006200162f620002bf82021704565b604051600160a060020a038216907f6ae172837ea30b801fbfcdd4108aa1d5bf8ff775444fd70256b44e6bf3dfc3f690600090a250565b6200029c336401000000006200031a810204565b1515620002a857600080fd5b620002bc8164010000000062000236810204565b50565b600160a060020a0381161515620002d557600080fd5b620002ea82826401000000006200033d810204565b15620002f557600080fd5b600160a060020a0316600090815260209190915260409020805460ff19166001179055565b6000620003376006836401000000006200157a6200033d82021704565b92915050565b6000600160a060020a03821615156200035557600080fd5b50600160a060020a03166000908152602091909152604090205460ff1690565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10620003b857805160ff1916838001178555620003e8565b82800160010185558215620003e8579182015b82811115620003e8578251825591602001919060010190620003cb565b50620003f6929150620003fa565b5090565b6200041791905b80821115620003f6576000815560010162000401565b90565b611715806200042a6000396000f3fe6080604052600436106101745763ffffffff7c010000000000000000000000000000000000000000000000000000000060003504166302a033fc811461017957806306fdde03146101a2578063095ea7b31461022c57806318160ddd1461026557806323b872dd1461028c578063313ce567146102cf57806339509351146102fa5780634000aea01461033357806340c10f19146103ee57806342966c681461042757806359447f541461045357806370a0823114610486578063715018a6146104b957806379cc6790146104ce5780637c4fdcd1146105075780638da5cb5b1461053a5780638f32d59b1461056b57806390db623f1461058057806395d89b411461063b578063983b2d56146106505780639865027514610683578063a457c2d714610698578063a9059cbb146106d1578063aa271e1a1461070a578063c1d34b891461073d578063cae9ca5114610803578063cb3993be146108be578063dd62ed3e14610979578063f2fde38b146109b4575b600080fd5b34801561018557600080fd5b5061018e6109e7565b604080519115158252519081900360200190f35b3480156101ae57600080fd5b506101b7610a08565b6040805160208082528351818301528351919283929083019185019080838360005b838110156101f15781810151838201526020016101d9565b50505050905090810190601f16801561021e5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561023857600080fd5b5061018e6004803603604081101561024f57600080fd5b50600160a060020a038135169060200135610a9e565b34801561027157600080fd5b5061027a610b0a565b60408051918252519081900360200190f35b34801561029857600080fd5b5061018e600480360360608110156102af57600080fd5b50600160a060020a03813581169160208101359091169060400135610b10565b3480156102db57600080fd5b506102e4610bc7565b6040805160ff9092168252519081900360200190f35b34801561030657600080fd5b5061018e6004803603604081101561031d57600080fd5b50600160a060020a038135169060200135610bd0565b61018e6004803603606081101561034957600080fd5b600160a060020a038235169160208101359181019060608101604082013564010000000081111561037957600080fd5b82018360208201111561038b57600080fd5b803590602001918460018302840111640100000000831117156103ad57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250929550610c6e945050505050565b3480156103fa57600080fd5b5061018e6004803603604081101561041157600080fd5b50600160a060020a038135169060200135610d50565b34801561043357600080fd5b506104516004803603602081101561044a57600080fd5b5035610d79565b005b34801561045f57600080fd5b5061027a6004803603602081101561047657600080fd5b5035600160a060020a0316610d86565b34801561049257600080fd5b5061027a600480360360208110156104a957600080fd5b5035600160a060020a0316610d98565b3480156104c557600080fd5b50610451610db3565b3480156104da57600080fd5b50610451600480360360408110156104f157600080fd5b50600160a060020a038135169060200135610e1d565b34801561051357600080fd5b5061018e6004803603602081101561052a57600080fd5b5035600160a060020a0316610e2b565b34801561054657600080fd5b5061054f610f41565b60408051600160a060020a039092168252519081900360200190f35b34801561057757600080fd5b5061018e610f50565b61018e6004803603606081101561059657600080fd5b600160a060020a03823516916020810135918101906060810160408201356401000000008111156105c657600080fd5b8201836020820111156105d857600080fd5b803590602001918460018302840111640100000000831117156105fa57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250929550610f61945050505050565b34801561064757600080fd5b506101b7610f83565b34801561065c57600080fd5b506104516004803603602081101561067357600080fd5b5035600160a060020a0316610fe4565b34801561068f57600080fd5b50610451611001565b3480156106a457600080fd5b5061018e600480360360408110156106bb57600080fd5b50600160a060020a03813516906020013561100c565b3480156106dd57600080fd5b5061018e600480360360408110156106f457600080fd5b50600160a060020a038135169060200135611057565b34801561071657600080fd5b5061018e6004803603602081101561072d57600080fd5b5035600160a060020a0316611064565b61018e6004803603608081101561075357600080fd5b600160a060020a0382358116926020810135909116916040820135919081019060808101606082013564010000000081111561078e57600080fd5b8201836020820111156107a057600080fd5b803590602001918460018302840111640100000000831117156107c257600080fd5b91908080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525092955061107d945050505050565b61018e6004803603606081101561081957600080fd5b600160a060020a038235169160208101359181019060608101604082013564010000000081111561084957600080fd5b82018360208201111561085b57600080fd5b8035906020019184600183028401116401000000008311171561087d57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250929550611161945050505050565b61018e600480360360608110156108d457600080fd5b600160a060020a038235169160208101359181019060608101604082013564010000000081111561090457600080fd5b82018360208201111561091657600080fd5b8035906020019184600183028401116401000000008311171561093857600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250929550611183945050505050565b34801561098557600080fd5b5061027a6004803603604081101561099c57600080fd5b50600160a060020a03813581169160200135166111a5565b3480156109c057600080fd5b50610451600480360360208110156109d757600080fd5b5035600160a060020a03166111d0565b60075474010000000000000000000000000000000000000000900460ff1681565b60038054604080516020601f6002600019610100600188161502019095169490940493840181900481028201810190925282815260609390929091830182828015610a945780601f10610a6957610100808354040283529160200191610a94565b820191906000526020600020905b815481529060010190602001808311610a7757829003601f168201915b5050505050905090565b6000600160a060020a0383161515610ab557600080fd5b336000818152600160209081526040808320600160a060020a03881680855290835292819020869055805186815290519293926000805160206116ca833981519152929181900390910190a350600192915050565b60025490565b600160a060020a0383166000908152600160209081526040808320338452909152812054610b44908363ffffffff6111ec16565b600160a060020a0385166000908152600160209081526040808320338452909152902055610b73848484611201565b600160a060020a0384166000818152600160209081526040808320338085529083529281902054815190815290519293926000805160206116ca833981519152929181900390910190a35060019392505050565b60055460ff1690565b6000600160a060020a0383161515610be757600080fd5b336000908152600160209081526040808320600160a060020a0387168452909152902054610c1b908363ffffffff6112ce16565b336000818152600160209081526040808320600160a060020a0389168085529083529281902085905580519485525191936000805160206116ca833981519152929081900390910190a350600192915050565b6000600160a060020a038416301415610c8657600080fd5b610c908484611057565b50600084600160a060020a031634846040518082805190602001908083835b60208310610cce5780518252601f199092019160209182019101610caf565b6001836020036101000a03801982511681845116808217855250505050505090500191505060006040518083038185875af1925050503d8060008114610d30576040519150601f19603f3d011682016040523d82523d6000602084013e610d35565b606091505b50509050801515610d4557600080fd5b506001949350505050565b6000610d5b33611064565b1515610d6657600080fd5b610d7083836112e7565b50600192915050565b610d833382611391565b50565b60086020526000908152604090205481565b600160a060020a031660009081526020819052604090205490565b610dbb610f50565b1515610dc657600080fd5b600754604051600091600160a060020a0316907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a36007805473ffffffffffffffffffffffffffffffffffffffff19169055565b610e27828261143a565b5050565b60075460009074010000000000000000000000000000000000000000900460ff1615610eb857604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601e60248201527f476f6f64446f6c6c617220616c726561647920696e697469616c697a65640000604482015290519081900360640190fd5b610ec0610f50565b1515610ecb57600080fd5b620f4240610ed98382610d50565b506007805474ff00000000000000000000000000000000000000001916740100000000000000000000000000000000000000001790556040517f4bd9691b23890469e070218632e0f2ccd47ffa720ac3619fb14ad9dc504cc42e90600090a150600192915050565b600754600160a060020a031690565b600754600160a060020a0316331490565b6000600160a060020a038416301415610f7957600080fd5b610c908484610bd0565b60048054604080516020601f6002600019610100600188161502019095169490940493840181900481028201810190925282815260609390929091830182828015610a945780601f10610a6957610100808354040283529160200191610a94565b610fed33611064565b1515610ff857600080fd5b610d83816114ea565b61100a33611532565b565b6000600160a060020a038316151561102357600080fd5b336000908152600160209081526040808320600160a060020a0387168452909152902054610c1b908363ffffffff6111ec16565b6000610d70338484611201565b600061107760068363ffffffff61157a16565b92915050565b6000600160a060020a03841630141561109557600080fd5b6110a0858585610b10565b50600084600160a060020a031634846040518082805190602001908083835b602083106110de5780518252601f1990920191602091820191016110bf565b6001836020036101000a03801982511681845116808217855250505050505090500191505060006040518083038185875af1925050503d8060008114611140576040519150601f19603f3d011682016040523d82523d6000602084013e611145565b606091505b5050905080151561115557600080fd5b50600195945050505050565b6000600160a060020a03841630141561117957600080fd5b610c908484610a9e565b6000600160a060020a03841630141561119b57600080fd5b610c90848461100c565b600160a060020a03918216600090815260016020908152604080832093909416825291909152205490565b6111d8610f50565b15156111e357600080fd5b610d83816115b1565b6000828211156111fb57600080fd5b50900390565b600160a060020a038216151561121657600080fd5b600160a060020a03831660009081526020819052604090205461123f908263ffffffff6111ec16565b600160a060020a038085166000908152602081905260408082209390935590841681522054611274908263ffffffff6112ce16565b600160a060020a038084166000818152602081815260409182902094909455805185815290519193928716927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92918290030190a3505050565b6000828201838110156112e057600080fd5b9392505050565b600160a060020a03821615156112fc57600080fd5b60025461130f908263ffffffff6112ce16565b600255600160a060020a03821660009081526020819052604090205461133b908263ffffffff6112ce16565b600160a060020a0383166000818152602081815260408083209490945583518581529351929391927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9281900390910190a35050565b600160a060020a03821615156113a657600080fd5b6002546113b9908263ffffffff6111ec16565b600255600160a060020a0382166000908152602081905260409020546113e5908263ffffffff6111ec16565b600160a060020a038316600081815260208181526040808320949094558351858152935191937fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef929081900390910190a35050565b600160a060020a038216600090815260016020908152604080832033845290915290205461146e908263ffffffff6111ec16565b600160a060020a038316600090815260016020908152604080832033845290915290205561149c8282611391565b600160a060020a0382166000818152600160209081526040808320338085529083529281902054815190815290519293926000805160206116ca833981519152929181900390910190a35050565b6114fb60068263ffffffff61162f16565b604051600160a060020a038216907f6ae172837ea30b801fbfcdd4108aa1d5bf8ff775444fd70256b44e6bf3dfc3f690600090a250565b61154360068263ffffffff61167d16565b604051600160a060020a038216907fe94479a9f7e1952cc78f2d6baab678adc1b772d936c6583def489e524cb6669290600090a250565b6000600160a060020a038216151561159157600080fd5b50600160a060020a03166000908152602091909152604090205460ff1690565b600160a060020a03811615156115c657600080fd5b600754604051600160a060020a038084169216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a36007805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0392909216919091179055565b600160a060020a038116151561164457600080fd5b61164e828261157a565b1561165857600080fd5b600160a060020a0316600090815260209190915260409020805460ff19166001179055565b600160a060020a038116151561169257600080fd5b61169c828261157a565b15156116a757600080fd5b600160a060020a0316600090815260209190915260409020805460ff1916905556fe8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925a165627a7a723058201a04921b60a18ebc539c0e14454a704bbbedb660302cd5be5f25c69789bd47570029",
  "deployedBytecode": "0x6080604052600436106101745763ffffffff7c010000000000000000000000000000000000000000000000000000000060003504166302a033fc811461017957806306fdde03146101a2578063095ea7b31461022c57806318160ddd1461026557806323b872dd1461028c578063313ce567146102cf57806339509351146102fa5780634000aea01461033357806340c10f19146103ee57806342966c681461042757806359447f541461045357806370a0823114610486578063715018a6146104b957806379cc6790146104ce5780637c4fdcd1146105075780638da5cb5b1461053a5780638f32d59b1461056b57806390db623f1461058057806395d89b411461063b578063983b2d56146106505780639865027514610683578063a457c2d714610698578063a9059cbb146106d1578063aa271e1a1461070a578063c1d34b891461073d578063cae9ca5114610803578063cb3993be146108be578063dd62ed3e14610979578063f2fde38b146109b4575b600080fd5b34801561018557600080fd5b5061018e6109e7565b604080519115158252519081900360200190f35b3480156101ae57600080fd5b506101b7610a08565b6040805160208082528351818301528351919283929083019185019080838360005b838110156101f15781810151838201526020016101d9565b50505050905090810190601f16801561021e5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561023857600080fd5b5061018e6004803603604081101561024f57600080fd5b50600160a060020a038135169060200135610a9e565b34801561027157600080fd5b5061027a610b0a565b60408051918252519081900360200190f35b34801561029857600080fd5b5061018e600480360360608110156102af57600080fd5b50600160a060020a03813581169160208101359091169060400135610b10565b3480156102db57600080fd5b506102e4610bc7565b6040805160ff9092168252519081900360200190f35b34801561030657600080fd5b5061018e6004803603604081101561031d57600080fd5b50600160a060020a038135169060200135610bd0565b61018e6004803603606081101561034957600080fd5b600160a060020a038235169160208101359181019060608101604082013564010000000081111561037957600080fd5b82018360208201111561038b57600080fd5b803590602001918460018302840111640100000000831117156103ad57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250929550610c6e945050505050565b3480156103fa57600080fd5b5061018e6004803603604081101561041157600080fd5b50600160a060020a038135169060200135610d50565b34801561043357600080fd5b506104516004803603602081101561044a57600080fd5b5035610d79565b005b34801561045f57600080fd5b5061027a6004803603602081101561047657600080fd5b5035600160a060020a0316610d86565b34801561049257600080fd5b5061027a600480360360208110156104a957600080fd5b5035600160a060020a0316610d98565b3480156104c557600080fd5b50610451610db3565b3480156104da57600080fd5b50610451600480360360408110156104f157600080fd5b50600160a060020a038135169060200135610e1d565b34801561051357600080fd5b5061018e6004803603602081101561052a57600080fd5b5035600160a060020a0316610e2b565b34801561054657600080fd5b5061054f610f41565b60408051600160a060020a039092168252519081900360200190f35b34801561057757600080fd5b5061018e610f50565b61018e6004803603606081101561059657600080fd5b600160a060020a03823516916020810135918101906060810160408201356401000000008111156105c657600080fd5b8201836020820111156105d857600080fd5b803590602001918460018302840111640100000000831117156105fa57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250929550610f61945050505050565b34801561064757600080fd5b506101b7610f83565b34801561065c57600080fd5b506104516004803603602081101561067357600080fd5b5035600160a060020a0316610fe4565b34801561068f57600080fd5b50610451611001565b3480156106a457600080fd5b5061018e600480360360408110156106bb57600080fd5b50600160a060020a03813516906020013561100c565b3480156106dd57600080fd5b5061018e600480360360408110156106f457600080fd5b50600160a060020a038135169060200135611057565b34801561071657600080fd5b5061018e6004803603602081101561072d57600080fd5b5035600160a060020a0316611064565b61018e6004803603608081101561075357600080fd5b600160a060020a0382358116926020810135909116916040820135919081019060808101606082013564010000000081111561078e57600080fd5b8201836020820111156107a057600080fd5b803590602001918460018302840111640100000000831117156107c257600080fd5b91908080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525092955061107d945050505050565b61018e6004803603606081101561081957600080fd5b600160a060020a038235169160208101359181019060608101604082013564010000000081111561084957600080fd5b82018360208201111561085b57600080fd5b8035906020019184600183028401116401000000008311171561087d57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250929550611161945050505050565b61018e600480360360608110156108d457600080fd5b600160a060020a038235169160208101359181019060608101604082013564010000000081111561090457600080fd5b82018360208201111561091657600080fd5b8035906020019184600183028401116401000000008311171561093857600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250929550611183945050505050565b34801561098557600080fd5b5061027a6004803603604081101561099c57600080fd5b50600160a060020a03813581169160200135166111a5565b3480156109c057600080fd5b50610451600480360360208110156109d757600080fd5b5035600160a060020a03166111d0565b60075474010000000000000000000000000000000000000000900460ff1681565b60038054604080516020601f6002600019610100600188161502019095169490940493840181900481028201810190925282815260609390929091830182828015610a945780601f10610a6957610100808354040283529160200191610a94565b820191906000526020600020905b815481529060010190602001808311610a7757829003601f168201915b5050505050905090565b6000600160a060020a0383161515610ab557600080fd5b336000818152600160209081526040808320600160a060020a03881680855290835292819020869055805186815290519293926000805160206116ca833981519152929181900390910190a350600192915050565b60025490565b600160a060020a0383166000908152600160209081526040808320338452909152812054610b44908363ffffffff6111ec16565b600160a060020a0385166000908152600160209081526040808320338452909152902055610b73848484611201565b600160a060020a0384166000818152600160209081526040808320338085529083529281902054815190815290519293926000805160206116ca833981519152929181900390910190a35060019392505050565b60055460ff1690565b6000600160a060020a0383161515610be757600080fd5b336000908152600160209081526040808320600160a060020a0387168452909152902054610c1b908363ffffffff6112ce16565b336000818152600160209081526040808320600160a060020a0389168085529083529281902085905580519485525191936000805160206116ca833981519152929081900390910190a350600192915050565b6000600160a060020a038416301415610c8657600080fd5b610c908484611057565b50600084600160a060020a031634846040518082805190602001908083835b60208310610cce5780518252601f199092019160209182019101610caf565b6001836020036101000a03801982511681845116808217855250505050505090500191505060006040518083038185875af1925050503d8060008114610d30576040519150601f19603f3d011682016040523d82523d6000602084013e610d35565b606091505b50509050801515610d4557600080fd5b506001949350505050565b6000610d5b33611064565b1515610d6657600080fd5b610d7083836112e7565b50600192915050565b610d833382611391565b50565b60086020526000908152604090205481565b600160a060020a031660009081526020819052604090205490565b610dbb610f50565b1515610dc657600080fd5b600754604051600091600160a060020a0316907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a36007805473ffffffffffffffffffffffffffffffffffffffff19169055565b610e27828261143a565b5050565b60075460009074010000000000000000000000000000000000000000900460ff1615610eb857604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601e60248201527f476f6f64446f6c6c617220616c726561647920696e697469616c697a65640000604482015290519081900360640190fd5b610ec0610f50565b1515610ecb57600080fd5b620f4240610ed98382610d50565b506007805474ff00000000000000000000000000000000000000001916740100000000000000000000000000000000000000001790556040517f4bd9691b23890469e070218632e0f2ccd47ffa720ac3619fb14ad9dc504cc42e90600090a150600192915050565b600754600160a060020a031690565b600754600160a060020a0316331490565b6000600160a060020a038416301415610f7957600080fd5b610c908484610bd0565b60048054604080516020601f6002600019610100600188161502019095169490940493840181900481028201810190925282815260609390929091830182828015610a945780601f10610a6957610100808354040283529160200191610a94565b610fed33611064565b1515610ff857600080fd5b610d83816114ea565b61100a33611532565b565b6000600160a060020a038316151561102357600080fd5b336000908152600160209081526040808320600160a060020a0387168452909152902054610c1b908363ffffffff6111ec16565b6000610d70338484611201565b600061107760068363ffffffff61157a16565b92915050565b6000600160a060020a03841630141561109557600080fd5b6110a0858585610b10565b50600084600160a060020a031634846040518082805190602001908083835b602083106110de5780518252601f1990920191602091820191016110bf565b6001836020036101000a03801982511681845116808217855250505050505090500191505060006040518083038185875af1925050503d8060008114611140576040519150601f19603f3d011682016040523d82523d6000602084013e611145565b606091505b5050905080151561115557600080fd5b50600195945050505050565b6000600160a060020a03841630141561117957600080fd5b610c908484610a9e565b6000600160a060020a03841630141561119b57600080fd5b610c90848461100c565b600160a060020a03918216600090815260016020908152604080832093909416825291909152205490565b6111d8610f50565b15156111e357600080fd5b610d83816115b1565b6000828211156111fb57600080fd5b50900390565b600160a060020a038216151561121657600080fd5b600160a060020a03831660009081526020819052604090205461123f908263ffffffff6111ec16565b600160a060020a038085166000908152602081905260408082209390935590841681522054611274908263ffffffff6112ce16565b600160a060020a038084166000818152602081815260409182902094909455805185815290519193928716927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92918290030190a3505050565b6000828201838110156112e057600080fd5b9392505050565b600160a060020a03821615156112fc57600080fd5b60025461130f908263ffffffff6112ce16565b600255600160a060020a03821660009081526020819052604090205461133b908263ffffffff6112ce16565b600160a060020a0383166000818152602081815260408083209490945583518581529351929391927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9281900390910190a35050565b600160a060020a03821615156113a657600080fd5b6002546113b9908263ffffffff6111ec16565b600255600160a060020a0382166000908152602081905260409020546113e5908263ffffffff6111ec16565b600160a060020a038316600081815260208181526040808320949094558351858152935191937fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef929081900390910190a35050565b600160a060020a038216600090815260016020908152604080832033845290915290205461146e908263ffffffff6111ec16565b600160a060020a038316600090815260016020908152604080832033845290915290205561149c8282611391565b600160a060020a0382166000818152600160209081526040808320338085529083529281902054815190815290519293926000805160206116ca833981519152929181900390910190a35050565b6114fb60068263ffffffff61162f16565b604051600160a060020a038216907f6ae172837ea30b801fbfcdd4108aa1d5bf8ff775444fd70256b44e6bf3dfc3f690600090a250565b61154360068263ffffffff61167d16565b604051600160a060020a038216907fe94479a9f7e1952cc78f2d6baab678adc1b772d936c6583def489e524cb6669290600090a250565b6000600160a060020a038216151561159157600080fd5b50600160a060020a03166000908152602091909152604090205460ff1690565b600160a060020a03811615156115c657600080fd5b600754604051600160a060020a038084169216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a36007805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0392909216919091179055565b600160a060020a038116151561164457600080fd5b61164e828261157a565b1561165857600080fd5b600160a060020a0316600090815260209190915260409020805460ff19166001179055565b600160a060020a038116151561169257600080fd5b61169c828261157a565b15156116a757600080fd5b600160a060020a0316600090815260209190915260409020805460ff1916905556fe8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925a165627a7a723058201a04921b60a18ebc539c0e14454a704bbbedb660302cd5be5f25c69789bd47570029",
  "sourceMap": "400:1447:2:-;;;555:35;;;-1:-1:-1;;;;;;555:35:2;;;760:337;5:2:-1;;;;30:1;27;20:12;5:2;760:337:2;;;;;;;;;;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;760:337:2;;;;;;19:11:-1;14:3;11:20;8:2;;;44:1;41;34:12;8:2;62:21;;123:4;114:14;;138:31;;;135:2;;;182:1;179;172:12;135:2;213:10;;261:11;244:29;;285:43;;;282:58;-1:-1;233:115;230:2;;;361:1;358;351:12;230:2;0:372;;760:337:2;;;;;;;19:11:-1;14:3;11:20;8:2;;;44:1;41;34:12;8:2;62:21;;123:4;114:14;;138:31;;;135:2;;;182:1;179;172:12;135:2;213:10;;261:11;244:29;;285:43;;;282:58;-1:-1;233:115;230:2;;;361:1;358;351:12;230:2;-1:-1;;760:337:2;;;;;;;;;;;;;;;19:11:-1;11:20;;8:2;;;44:1;41;34:12;8:2;62:21;;123:4;114:14;;138:31;;;135:2;;;182:1;179;172:12;135:2;219:3;213:10;331:9;325:2;311:12;307:21;289:16;285:44;282:59;261:11;247:12;244:29;233:116;230:2;;;362:1;359;352:12;230:2;-1:-1;;493:12:21;;760:337:2;;-1:-1:-1;972:4:2;;-1:-1:-1;978:6:2;;-1:-1:-1;986:8:2;;493:12:21;;:5;;:12;;;;;:::i;:::-;-1:-1:-1;515:16:21;;;;:7;;:16;;;;;:::i;:::-;-1:-1:-1;541:9:21;:20;;-1:-1:-1;;541:20:21;;;;;;;;;;;;-1:-1:-1;275:22:16;;-1:-1:-1;286:10:16;275;;;;:22;:::i;:::-;515:6:18;:19;;-1:-1:-1;;;;;;515:19:18;524:10;515:19;;;;;549:40;;-1:-1:-1;;;;;582:6:18;;;;;515;;549:40;;515:6;;549:40;1028:6:2;1024:66;1041:7;:14;1039:1;:16;1024:66;;;1069:21;1079:7;1087:1;1079:10;;;;;;;;;;;;;;;;;;1069:9;;;:21;;;:::i;:::-;1056:3;;1024:66;;;;760:337;;;;400:1447;;685:119:16;741:21;:8;754:7;741:12;;;;;;:21;:::i;:::-;777:20;;-1:-1:-1;;;;;777:20:16;;;;;;;;685:119;:::o;508:90::-;350:20;359:10;350:8;;;;:20;:::i;:::-;342:29;;;;;;;;572:19;583:7;572:10;;;;:19;:::i;:::-;508:90;:::o;259:181:15:-;-1:-1:-1;;;;;335:21:15;;;;327:30;;;;;;376:18;380:4;386:7;376:3;;;;:18;:::i;:::-;375:19;367:28;;;;;;-1:-1:-1;;;;;406:20:15;:11;:20;;;;;;;;;;;:27;;-1:-1:-1;;406:27:15;429:4;406:27;;;259:181::o;395:107:16:-;451:4;474:21;:8;487:7;474:12;;;;;;:21;:::i;:::-;467:28;395:107;-1:-1:-1;;395:107:16:o;786:162:15:-;858:4;-1:-1:-1;;;;;882:21:15;;;;874:30;;;;;;-1:-1:-1;;;;;;921:20:15;:11;:20;;;;;;;;;;;;;;;786:162::o;400:1447:2:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;400:1447:2;;;-1:-1:-1;400:1447:2;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;",
  "deployedSourceMap": "400:1447:2:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;555:35;;8:9:-1;5:2;;;30:1;27;20:12;5:2;555:35:2;;;;;;;;;;;;;;;;;;;;;;628:81:21;;8:9:-1;5:2;;;30:1;27;20:12;5:2;628:81:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:100:-1;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;628:81:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2735:238:19;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2735:238:19;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;2735:238:19;;;;;;;;;936:89;;8:9:-1;5:2;;;30:1;27;20:12;5:2;936:89:19;;;;;;;;;;;;;;;;;;;;3436:294;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3436:294:19;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;3436:294:19;;;;;;;;;;;;;;;;;;930:81:21;;8:9:-1;5:2;;;30:1;27;20:12;5:2;930:81:21;;;;;;;;;;;;;;;;;;;;;;;4233:317:19;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4233:317:19;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;4233:317:19;;;;;;;;;2049:396:13;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;2049:396:13;;;;;;;;;;;;;;;;;;;21:11:-1;5:28;;2:2;;;46:1;43;36:12;2:2;2049:396:13;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;2049:396:13;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;2049:396:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;81:16;;74:27;;;;-1:-1;2049:396:13;;-1:-1:-1;2049:396:13;;-1:-1:-1;;;;;2049:396:13;443:128:22;;8:9:-1;5:2;;;30:1;27;20:12;5:2;443:128:22;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;443:128:22;;;;;;;;;295:77:20;;8:9:-1;5:2;;;30:1;27;20:12;5:2;295:77:20;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;295:77:20;;;;;597:45:2;;8:9:-1;5:2;;;30:1;27;20:12;5:2;597:45:2;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;597:45:2;-1:-1:-1;;;;;597:45:2;;;1234:104:19;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1234:104:19;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1234:104:19;-1:-1:-1;;;;;1234:104:19;;;1347:137:18;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1347:137:18;;;;624:93:20;;8:9:-1;5:2;;;30:1;27;20:12;5:2;624:93:20;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;624:93:20;;;;;;;;;1238:604:2;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1238:604:2;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1238:604:2;-1:-1:-1;;;;;1238:604:2;;;659:77:18;;8:9:-1;5:2;;;30:1;27;20:12;5:2;659:77:18;;;;;;;;-1:-1:-1;;;;;659:77:18;;;;;;;;;;;;;;979:90;;8:9:-1;5:2;;;30:1;27;20:12;5:2;979:90:18;;;;3940:444:13;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;3940:444:13;;;;;;;;;;;;;;;;;;;21:11:-1;5:28;;2:2;;;46:1;43;36:12;2:2;3940:444:13;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;3940:444:13;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;3940:444:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;81:16;;74:27;;;;-1:-1;3940:444:13;;-1:-1:-1;3940:444:13;;-1:-1:-1;;;;;3940:444:13;771:85:21;;8:9:-1;5:2;;;30:1;27;20:12;5:2;771:85:21;;;;508:90:16;;8:9:-1;5:2;;;30:1;27;20:12;5:2;508:90:16;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;508:90:16;-1:-1:-1;;;;;508:90:16;;;604:75;;8:9:-1;5:2;;;30:1;27;20:12;5:2;604:75:16;;;;5058:327:19;;8:9:-1;5:2;;;30:1;27;20:12;5:2;5058:327:19;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;5058:327:19;;;;;;;;;1962:137;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1962:137:19;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;1962:137:19;;;;;;;;;395:107:16;;8:9:-1;5:2;;;30:1;27;20:12;5:2;395:107:16;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;395:107:16;-1:-1:-1;;;;;395:107:16;;;2917:426:13;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;-1:-1;;;;;2917:426:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;21:11:-1;5:28;;2:2;;;46:1;43;36:12;2:2;2917:426:13;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;2917:426:13;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;2917:426:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;81:16;;74:27;;;;-1:-1;2917:426:13;;-1:-1:-1;2917:426:13;;-1:-1:-1;;;;;2917:426:13;1204:415;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;1204:415:13;;;;;;;;;;;;;;;;;;;21:11:-1;5:28;;2:2;;;46:1;43;36:12;2:2;1204:415:13;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;1204:415:13;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;1204:415:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;81:16;;74:27;;;;-1:-1;1204:415:13;;-1:-1:-1;1204:415:13;;-1:-1:-1;;;;;1204:415:13;4986:454;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;4986:454:13;;;;;;;;;;;;;;;;;;;21:11:-1;5:28;;2:2;;;46:1;43;36:12;2:2;4986:454:13;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;4986:454:13;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;4986:454:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;81:16;;74:27;;;;-1:-1;4986:454:13;;-1:-1:-1;4986:454:13;;-1:-1:-1;;;;;4986:454:13;1669:129:19;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1669:129:19;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;1669:129:19;;;;;;;;;;;1655:107:18;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1655:107:18;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1655:107:18;-1:-1:-1;;;;;1655:107:18;;;555:35:2;;;;;;;;;:::o;628:81:21:-;697:5;690:12;;;;;;;;-1:-1:-1;;690:12:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;665:13;;690:12;;697:5;;690:12;;697:5;690:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;628:81;:::o;2735:238:19:-;2800:4;-1:-1:-1;;;;;2824:21:19;;;;2816:30;;;;;;2866:10;2857:20;;;;:8;:20;;;;;;;;-1:-1:-1;;;;;2857:29:19;;;;;;;;;;;;:37;;;2909:36;;;;;;;2857:29;;2866:10;-1:-1:-1;;;;;;;;;;;2909:36:19;;;;;;;;;;-1:-1:-1;2962:4:19;2735:238;;;;:::o;936:89::-;1006:12;;936:89;:::o;3436:294::-;-1:-1:-1;;;;;3560:14:19;;3515:4;3560:14;;;:8;:14;;;;;;;;3575:10;3560:26;;;;;;;;:37;;3591:5;3560:37;:30;:37;:::i;:::-;-1:-1:-1;;;;;3531:14:19;;;;;;:8;:14;;;;;;;;3546:10;3531:26;;;;;;;:66;3607:26;3540:4;3623:2;3627:5;3607:9;:26::i;:::-;-1:-1:-1;;;;;3648:54:19;;3675:14;;;;:8;:14;;;;;;;;3663:10;3675:26;;;;;;;;;;;3648:54;;;;;;;3663:10;;3648:54;-1:-1:-1;;;;;;;;;;;3648:54:19;;;;;;;;;;-1:-1:-1;3719:4:19;3436:294;;;;;:::o;930:81:21:-;995:9;;;;930:81;:::o;4233:317:19:-;4313:4;-1:-1:-1;;;;;4337:21:19;;;;4329:30;;;;;;4411:10;4402:20;;;;:8;:20;;;;;;;;-1:-1:-1;;;;;4402:29:19;;;;;;;;;;:45;;4436:10;4402:45;:33;:45;:::i;:::-;4379:10;4370:20;;;;:8;:20;;;;;;;;-1:-1:-1;;;;;4370:29:19;;;;;;;;;;;;:77;;;4462:60;;;;;;4370:29;;-1:-1:-1;;;;;;;;;;;4462:60:19;;;;;;;;;;-1:-1:-1;4539:4:19;4233:317;;;;:::o;2049:396:13:-;2189:4;-1:-1:-1;;;;;2217:20:13;;2232:4;2217:20;;2209:29;;;;;;2249:27;2264:3;2269:6;2249:14;:27::i;:::-;;2342:12;2359:3;-1:-1:-1;;;;;2359:8:13;2374:9;2385:5;2359:32;;;;;;;;;;;;;36:153:-1;66:2;58:11;;36:153;;176:10;;164:23;;-1:-1;;139:12;;;;98:2;89:12;;;;114;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;2359:32:13;;;;;;;;;;;;;;;;;;;;;;;;;14:1:-1;21;16:31;;;;75:4;69:11;64:16;;144:4;140:9;133:4;115:16;111:27;107:43;104:1;100:51;94:4;87:65;169:16;166:1;159:27;225:16;222:1;215:4;212:1;208:12;193:49;7:242;;16:31;36:4;31:9;;7:242;;2341:50:13;;;2409:7;2401:16;;;;;;;;-1:-1:-1;2434:4:13;;2049:396;-1:-1:-1;;;;2049:396:13:o;443:128:22:-;511:4;350:20:16;359:10;350:8;:20::i;:::-;342:29;;;;;;;;527:16:22;533:2;537:5;527;:16::i;:::-;-1:-1:-1;560:4:22;443:128;;;;:::o;295:77:20:-;341:24;347:10;359:5;341;:24::i;:::-;295:77;:::o;597:45:2:-;;;;;;;;;;;;;:::o;1234:104:19:-;-1:-1:-1;;;;;1315:16:19;1289:7;1315:16;;;;;;;;;;;;1234:104::o;1347:137:18:-;863:9;:7;:9::i;:::-;855:18;;;;;;;;1429:6;;1408:40;;1445:1;;-1:-1:-1;;;;;1429:6:18;;1408:40;;1445:1;;1408:40;1458:6;:19;;-1:-1:-1;;1458:19:18;;;1347:137::o;624:93:20:-;688:22;698:4;704:5;688:9;:22::i;:::-;624:93;;:::o;1238:604:2:-;689:15;;1310:4;;689:15;;;;;688:16;680:58;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;863:9:18;:7;:9::i;:::-;855:18;;;;;;;;1696:11:2;1736:18;1741:4;1696:11;1736:4;:18::i;:::-;-1:-1:-1;1763:15:2;:22;;-1:-1:-1;;1763:22:2;;;;;1798:17;;;;1763:22;;1798:17;-1:-1:-1;1831:4:2;;1238:604;-1:-1:-1;;1238:604:2:o;659:77:18:-;723:6;;-1:-1:-1;;;;;723:6:18;659:77;:::o;979:90::-;1056:6;;-1:-1:-1;;;;;1056:6:18;1042:10;:20;;979:90::o;3940:444:13:-;4098:4;-1:-1:-1;;;;;4126:25:13;;4146:4;4126:25;;4118:34;;;;;;4163:46;4187:8;4197:11;4163:23;:46::i;771:85:21:-;842:7;835:14;;;;;;;;-1:-1:-1;;835:14:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;810:13;;835:14;;842:7;;835:14;;842:7;835:14;;;;;;;;;;;;;;;;;;;;;;;;508:90:16;350:20;359:10;350:8;:20::i;:::-;342:29;;;;;;;;572:19;583:7;572:10;:19::i;604:75::-;647:25;661:10;647:13;:25::i;:::-;604:75::o;5058:327:19:-;5143:4;-1:-1:-1;;;;;5167:21:19;;;;5159:30;;;;;;5241:10;5232:20;;;;:8;:20;;;;;;;;-1:-1:-1;;;;;5232:29:19;;;;;;;;;;:50;;5266:15;5232:50;:33;:50;:::i;1962:137::-;2023:4;2039:32;2049:10;2061:2;2065:5;2039:9;:32::i;395:107:16:-;451:4;474:21;:8;487:7;474:21;:12;:21;:::i;:::-;467:28;395:107;-1:-1:-1;;395:107:16:o;2917:426:13:-;3076:4;-1:-1:-1;;;;;3104:20:13;;3119:4;3104:20;;3096:29;;;;;;3136:38;3155:5;3162:3;3167:6;3136:18;:38::i;:::-;;3240:12;3257:3;-1:-1:-1;;;;;3257:8:13;3272:9;3283:5;3257:32;;;;;;;;;;;;;36:153:-1;66:2;58:11;;36:153;;176:10;;164:23;;-1:-1;;139:12;;;;98:2;89:12;;;;114;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;3257:32:13;;;;;;;;;;;;;;;;;;;;;;;;;14:1:-1;21;16:31;;;;75:4;69:11;64:16;;144:4;140:9;133:4;115:16;111:27;107:43;104:1;100:51;94:4;87:65;169:16;166:1;159:27;225:16;222:1;215:4;212:1;208:12;193:49;7:242;;16:31;36:4;31:9;;7:242;;3239:50:13;;;3307:7;3299:16;;;;;;;;-1:-1:-1;3332:4:13;;2917:426;-1:-1:-1;;;;;2917:426:13:o;1204:415::-;1348:4;-1:-1:-1;;;;;1376:25:13;;1396:4;1376:25;;1368:34;;;;;;1413:31;1427:8;1437:6;1413:13;:31::i;4986:454::-;5149:4;-1:-1:-1;;;;;5177:25:13;;5197:4;5177:25;;5169:34;;;;;;5214:51;5238:8;5248:16;5214:23;:51::i;1669:129:19:-;-1:-1:-1;;;;;1767:15:19;;;1741:7;1767:15;;;:8;:15;;;;;;;;:24;;;;;;;;;;;;;1669:129::o;1655:107:18:-;863:9;:7;:9::i;:::-;855:18;;;;;;;;1727:28;1746:8;1727:18;:28::i;1205:145:17:-;1263:7;1290:6;;;;1282:15;;;;;;-1:-1:-1;1319:5:17;;;1205:145::o;5599:256:19:-;-1:-1:-1;;;;;5686:16:19;;;;5678:25;;;;;;-1:-1:-1;;;;;5732:15:19;;:9;:15;;;;;;;;;;;:26;;5752:5;5732:26;:19;:26;:::i;:::-;-1:-1:-1;;;;;5714:15:19;;;:9;:15;;;;;;;;;;;:44;;;;5784:13;;;;;;;:24;;5802:5;5784:24;:17;:24;:::i;:::-;-1:-1:-1;;;;;5768:13:19;;;:9;:13;;;;;;;;;;;;:40;;;;5823:25;;;;;;;5768:13;;5823:25;;;;;;;;;;;;;5599:256;;;:::o;1431:145:17:-;1489:7;1520:5;;;1543:6;;;;1535:15;;;;;;1568:1;1431:145;-1:-1:-1;;;1431:145:17:o;6198:263:19:-;-1:-1:-1;;;;;6272:21:19;;;;6264:30;;;;;;6320:12;;:23;;6337:5;6320:23;:16;:23;:::i;:::-;6305:12;:38;-1:-1:-1;;;;;6374:18:19;;:9;:18;;;;;;;;;;;:29;;6397:5;6374:29;:22;:29;:::i;:::-;-1:-1:-1;;;;;6353:18:19;;:9;:18;;;;;;;;;;;:50;;;;6418:36;;;;;;;6353:18;;:9;;6418:36;;;;;;;;;;6198:263;;:::o;6687:::-;-1:-1:-1;;;;;6761:21:19;;;;6753:30;;;;;;6809:12;;:23;;6826:5;6809:23;:16;:23;:::i;:::-;6794:12;:38;-1:-1:-1;;;;;6863:18:19;;:9;:18;;;;;;;;;;;:29;;6886:5;6863:29;:22;:29;:::i;:::-;-1:-1:-1;;;;;6842:18:19;;:9;:18;;;;;;;;;;;:50;;;;6907:36;;;;;;;6842:9;;6907:36;;;;;;;;;;;6687:263;;:::o;7339:255::-;-1:-1:-1;;;;;7441:17:19;;;;;;:8;:17;;;;;;;;7459:10;7441:29;;;;;;;;:40;;7475:5;7441:40;:33;:40;:::i;:::-;-1:-1:-1;;;;;7409:17:19;;;;;;:8;:17;;;;;;;;7427:10;7409:29;;;;;;;:72;7491:21;7418:7;7506:5;7491;:21::i;:::-;-1:-1:-1;;;;;7527:60:19;;7557:17;;;;:8;:17;;;;;;;;7545:10;7557:29;;;;;;;;;;;7527:60;;;;;;;7545:10;;7527:60;-1:-1:-1;;;;;;;;;;;7527:60:19;;;;;;;;;;7339:255;;:::o;685:119:16:-;741:21;:8;754:7;741:21;:12;:21;:::i;:::-;777:20;;-1:-1:-1;;;;;777:20:16;;;;;;;;685:119;:::o;810:127::-;869:24;:8;885:7;869:24;:15;:24;:::i;:::-;908:22;;-1:-1:-1;;;;;908:22:16;;;;;;;;810:127;:::o;786:162:15:-;858:4;-1:-1:-1;;;;;882:21:15;;;;874:30;;;;;;-1:-1:-1;;;;;;921:20:15;:11;:20;;;;;;;;;;;;;;;786:162::o;1906:183:18:-;-1:-1:-1;;;;;1979:22:18;;;;1971:31;;;;;;2038:6;;2017:38;;-1:-1:-1;;;;;2017:38:18;;;;2038:6;;2017:38;;2038:6;;2017:38;2065:6;:17;;-1:-1:-1;;2065:17:18;-1:-1:-1;;;;;2065:17:18;;;;;;;;;;1906:183::o;259:181:15:-;-1:-1:-1;;;;;335:21:15;;;;327:30;;;;;;376:18;380:4;386:7;376:3;:18::i;:::-;375:19;367:28;;;;;;-1:-1:-1;;;;;406:20:15;:11;:20;;;;;;;;;;;:27;;-1:-1:-1;;406:27:15;429:4;406:27;;;259:181::o;514:184::-;-1:-1:-1;;;;;593:21:15;;;;585:30;;;;;;633:18;637:4;643:7;633:3;:18::i;:::-;625:27;;;;;;;;-1:-1:-1;;;;;663:20:15;686:5;663:20;;;;;;;;;;;:28;;-1:-1:-1;;663:28:15;;;514:184::o",
  "source": "pragma solidity ^0.5.0;\n\nimport \"openzeppelin-solidity/contracts/math/SafeMath.sol\";\nimport \"openzeppelin-solidity/contracts/token/ERC20/ERC20Detailed.sol\";\nimport \"openzeppelin-solidity/contracts/token/ERC20/ERC20Mintable.sol\";\nimport \"openzeppelin-solidity/contracts/token/ERC20/ERC20Burnable.sol\";\nimport \"openzeppelin-solidity/contracts/ownership/Ownable.sol\";\nimport \"./token/ERC827Token.sol\";\n\ncontract GoodDollar is ERC827Token,ERC20Detailed,ERC20Mintable,ERC20Burnable, Ownable {\n    using SafeMath for uint256;\n\n    event PopulatedMarket();\n\n    bool public populatedMarket = false;\n\n    mapping (address => uint) public last_claimed;\n\n    modifier canPopulate() {\n      require(!populatedMarket,\"GoodDollar already initialized\");\n      _;\n    }\n\n    constructor (\n        string memory name,\n        string memory symbol,\n        uint8 decimals,\n        address[] memory minters\n    ) public\n        ERC20Burnable()\n        ERC20Mintable()\n        ERC20Detailed(name, symbol, decimals)\n        ERC20()\n    {\n      for(uint i = 0;i<minters.length;i++)\n        addMinter(minters[i]);\n    }\n\n    // Creats initial amount of this coin (GoodDollar) in the market\n    // Amount is 100 coins for a start (of the GoodDollar market)\n    function initialMove(address _gcm) canPopulate public onlyOwner returns(bool) {\n      // amount is 100 * 10^18 as each token seems to be viewed as\n      // a wei-like equivalent in the bancor formulas\n      \n      // should be: uint256 amount = 100*(10**decimals);\n      // replace \"18\" in the number of decimals. \n      //Don't replace in decimals var itself; it is uint8 and wiil cause inaccuracy. Should not change to uint256 also.\n      uint256 amount = 100*(10**4); // ** is math.power\n\n      mint(_gcm, amount);\n\n      populatedMarket = true;\n      emit PopulatedMarket();\n\n      return true;\n    }\n  \n}",
  "sourcePath": "C:\\Users\\hadarro\\Documents\\GoodDollar\\GoodContracts\\contracts\\GoodDollar.sol",
  "ast": {
    "absolutePath": "/C/Users/hadarro/Documents/GoodDollar/GoodContracts/contracts/GoodDollar.sol",
    "exportedSymbols": {
      "GoodDollar": [
        2290
      ]
    },
    "id": 2291,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 2174,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:2"
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/math/SafeMath.sol",
        "file": "openzeppelin-solidity/contracts/math/SafeMath.sol",
        "id": 2175,
        "nodeType": "ImportDirective",
        "scope": 2291,
        "sourceUnit": 4053,
        "src": "25:59:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/token/ERC20/ERC20Detailed.sol",
        "file": "openzeppelin-solidity/contracts/token/ERC20/ERC20Detailed.sol",
        "id": 2176,
        "nodeType": "ImportDirective",
        "scope": 2291,
        "sourceUnit": 4683,
        "src": "85:71:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/token/ERC20/ERC20Mintable.sol",
        "file": "openzeppelin-solidity/contracts/token/ERC20/ERC20Mintable.sol",
        "id": 2177,
        "nodeType": "ImportDirective",
        "scope": 2291,
        "sourceUnit": 4711,
        "src": "157:71:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/token/ERC20/ERC20Burnable.sol",
        "file": "openzeppelin-solidity/contracts/token/ERC20/ERC20Burnable.sol",
        "id": 2178,
        "nodeType": "ImportDirective",
        "scope": 2291,
        "sourceUnit": 4625,
        "src": "229:71:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/ownership/Ownable.sol",
        "file": "openzeppelin-solidity/contracts/ownership/Ownable.sol",
        "id": 2179,
        "nodeType": "ImportDirective",
        "scope": 2291,
        "sourceUnit": 4162,
        "src": "301:63:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/C/Users/hadarro/Documents/GoodDollar/GoodContracts/contracts/token/ERC827Token.sol",
        "file": "./token/ERC827Token.sol",
        "id": 2180,
        "nodeType": "ImportDirective",
        "scope": 2291,
        "sourceUnit": 3712,
        "src": "365:33:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 2181,
              "name": "ERC827Token",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 3711,
              "src": "423:11:2",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC827Token_$3711",
                "typeString": "contract ERC827Token"
              }
            },
            "id": 2182,
            "nodeType": "InheritanceSpecifier",
            "src": "423:11:2"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 2183,
              "name": "ERC20Detailed",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 4682,
              "src": "435:13:2",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20Detailed_$4682",
                "typeString": "contract ERC20Detailed"
              }
            },
            "id": 2184,
            "nodeType": "InheritanceSpecifier",
            "src": "435:13:2"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 2185,
              "name": "ERC20Mintable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 4710,
              "src": "449:13:2",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20Mintable_$4710",
                "typeString": "contract ERC20Mintable"
              }
            },
            "id": 2186,
            "nodeType": "InheritanceSpecifier",
            "src": "449:13:2"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 2187,
              "name": "ERC20Burnable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 4624,
              "src": "463:13:2",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20Burnable_$4624",
                "typeString": "contract ERC20Burnable"
              }
            },
            "id": 2188,
            "nodeType": "InheritanceSpecifier",
            "src": "463:13:2"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 2189,
              "name": "Ownable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 4161,
              "src": "478:7:2",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Ownable_$4161",
                "typeString": "contract Ownable"
              }
            },
            "id": 2190,
            "nodeType": "InheritanceSpecifier",
            "src": "478:7:2"
          }
        ],
        "contractDependencies": [
          3479,
          3711,
          3924,
          4161,
          4593,
          4624,
          4682,
          4710,
          4779
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 2290,
        "linearizedBaseContracts": [
          2290,
          4161,
          4624,
          4710,
          3924,
          4682,
          3711,
          3479,
          4593,
          4779
        ],
        "name": "GoodDollar",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 2193,
            "libraryName": {
              "contractScope": null,
              "id": 2191,
              "name": "SafeMath",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 4052,
              "src": "498:8:2",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SafeMath_$4052",
                "typeString": "library SafeMath"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "492:27:2",
            "typeName": {
              "id": 2192,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "511:7:2",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 2195,
            "name": "PopulatedMarket",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 2194,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "546:2:2"
            },
            "src": "525:24:2"
          },
          {
            "constant": false,
            "id": 2198,
            "name": "populatedMarket",
            "nodeType": "VariableDeclaration",
            "scope": 2290,
            "src": "555:35:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 2196,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "555:4:2",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "66616c7365",
              "id": 2197,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "bool",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "585:5:2",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              },
              "value": "false"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 2202,
            "name": "last_claimed",
            "nodeType": "VariableDeclaration",
            "scope": 2290,
            "src": "597:45:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 2201,
              "keyType": {
                "id": 2199,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "606:7:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "597:25:2",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueType": {
                "id": 2200,
                "name": "uint",
                "nodeType": "ElementaryTypeName",
                "src": "617:4:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2211,
              "nodeType": "Block",
              "src": "672:82:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 2206,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "688:16:2",
                        "subExpression": {
                          "argumentTypes": null,
                          "id": 2205,
                          "name": "populatedMarket",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2198,
                          "src": "689:15:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "476f6f64446f6c6c617220616c726561647920696e697469616c697a6564",
                        "id": 2207,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "705:32:2",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_4d04c6d59bb00144ebab58b5bb9ad965ce13baa4920e90d397a09afdf0506643",
                          "typeString": "literal_string \"GoodDollar already initialized\""
                        },
                        "value": "GoodDollar already initialized"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_4d04c6d59bb00144ebab58b5bb9ad965ce13baa4920e90d397a09afdf0506643",
                          "typeString": "literal_string \"GoodDollar already initialized\""
                        }
                      ],
                      "id": 2204,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4797,
                        4798
                      ],
                      "referencedDeclaration": 4798,
                      "src": "680:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2208,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "680:58:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2209,
                  "nodeType": "ExpressionStatement",
                  "src": "680:58:2"
                },
                {
                  "id": 2210,
                  "nodeType": "PlaceholderStatement",
                  "src": "746:1:2"
                }
              ]
            },
            "documentation": null,
            "id": 2212,
            "name": "canPopulate",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 2203,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "669:2:2"
            },
            "src": "649:105:2",
            "visibility": "internal"
          },
          {
            "body": {
              "id": 2253,
              "nodeType": "Block",
              "src": "1016:81:2",
              "statements": [
                {
                  "body": {
                    "expression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 2247,
                            "name": "minters",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2221,
                            "src": "1079:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                              "typeString": "address[] memory"
                            }
                          },
                          "id": 2249,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 2248,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2236,
                            "src": "1087:1:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "1079:10:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 2246,
                        "name": "addMinter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3882,
                        "src": "1069:9:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                          "typeString": "function (address)"
                        }
                      },
                      "id": 2250,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1069:21:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 2251,
                    "nodeType": "ExpressionStatement",
                    "src": "1069:21:2"
                  },
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 2242,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 2239,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2236,
                      "src": "1039:1:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 2240,
                        "name": "minters",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2221,
                        "src": "1041:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      },
                      "id": 2241,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "1041:14:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1039:16:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2252,
                  "initializationExpression": {
                    "assignments": [
                      2236
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 2236,
                        "name": "i",
                        "nodeType": "VariableDeclaration",
                        "scope": 2252,
                        "src": "1028:6:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2235,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "1028:4:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "id": 2238,
                    "initialValue": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 2237,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1037:1:2",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "1028:10:2"
                  },
                  "loopExpression": {
                    "expression": {
                      "argumentTypes": null,
                      "id": 2244,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "1056:3:2",
                      "subExpression": {
                        "argumentTypes": null,
                        "id": 2243,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2236,
                        "src": "1056:1:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 2245,
                    "nodeType": "ExpressionStatement",
                    "src": "1056:3:2"
                  },
                  "nodeType": "ForStatement",
                  "src": "1024:66:2"
                }
              ]
            },
            "documentation": null,
            "id": 2254,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [],
                "id": 2224,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 2223,
                  "name": "ERC20Burnable",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 4624,
                  "src": "910:13:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_ERC20Burnable_$4624_$",
                    "typeString": "type(contract ERC20Burnable)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "910:15:2"
              },
              {
                "arguments": [],
                "id": 2226,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 2225,
                  "name": "ERC20Mintable",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 4710,
                  "src": "934:13:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_ERC20Mintable_$4710_$",
                    "typeString": "type(contract ERC20Mintable)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "934:15:2"
              },
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 2228,
                    "name": "name",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2214,
                    "src": "972:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 2229,
                    "name": "symbol",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2216,
                    "src": "978:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 2230,
                    "name": "decimals",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2218,
                    "src": "986:8:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  }
                ],
                "id": 2231,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 2227,
                  "name": "ERC20Detailed",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 4682,
                  "src": "958:13:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_ERC20Detailed_$4682_$",
                    "typeString": "type(contract ERC20Detailed)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "958:37:2"
              },
              {
                "arguments": [],
                "id": 2233,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 2232,
                  "name": "ERC20",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 4593,
                  "src": "1004:5:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_ERC20_$4593_$",
                    "typeString": "type(contract ERC20)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1004:7:2"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2222,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2214,
                  "name": "name",
                  "nodeType": "VariableDeclaration",
                  "scope": 2254,
                  "src": "782:18:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 2213,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "782:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2216,
                  "name": "symbol",
                  "nodeType": "VariableDeclaration",
                  "scope": 2254,
                  "src": "810:20:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 2215,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "810:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2218,
                  "name": "decimals",
                  "nodeType": "VariableDeclaration",
                  "scope": 2254,
                  "src": "840:14:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 2217,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "840:5:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2221,
                  "name": "minters",
                  "nodeType": "VariableDeclaration",
                  "scope": 2254,
                  "src": "864:24:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 2219,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "864:7:2",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 2220,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "864:9:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "772:122:2"
            },
            "returnParameters": {
              "id": 2234,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1016:0:2"
            },
            "scope": 2290,
            "src": "760:337:2",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2288,
              "nodeType": "Block",
              "src": "1316:526:2",
              "statements": [
                {
                  "assignments": [
                    2266
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2266,
                      "name": "amount",
                      "nodeType": "VariableDeclaration",
                      "scope": 2288,
                      "src": "1679:14:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2265,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1679:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 2273,
                  "initialValue": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_rational_1000000_by_1",
                      "typeString": "int_const 1000000"
                    },
                    "id": 2272,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "hexValue": "313030",
                      "id": 2267,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1696:3:2",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_100_by_1",
                        "typeString": "int_const 100"
                      },
                      "value": "100"
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "*",
                    "rightExpression": {
                      "argumentTypes": null,
                      "components": [
                        {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_rational_10000_by_1",
                            "typeString": "int_const 10000"
                          },
                          "id": 2270,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "hexValue": "3130",
                            "id": 2268,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1701:2:2",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_10_by_1",
                              "typeString": "int_const 10"
                            },
                            "value": "10"
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "**",
                          "rightExpression": {
                            "argumentTypes": null,
                            "hexValue": "34",
                            "id": 2269,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1705:1:2",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_4_by_1",
                              "typeString": "int_const 4"
                            },
                            "value": "4"
                          },
                          "src": "1701:5:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_10000_by_1",
                            "typeString": "int_const 10000"
                          }
                        }
                      ],
                      "id": 2271,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "1700:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_10000_by_1",
                        "typeString": "int_const 10000"
                      }
                    },
                    "src": "1696:11:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_1000000_by_1",
                      "typeString": "int_const 1000000"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1679:28:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 2275,
                        "name": "_gcm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2256,
                        "src": "1741:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 2276,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2266,
                        "src": "1747:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 2274,
                      "name": "mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4709,
                      "src": "1736:4:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) returns (bool)"
                      }
                    },
                    "id": 2277,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1736:18:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2278,
                  "nodeType": "ExpressionStatement",
                  "src": "1736:18:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2281,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 2279,
                      "name": "populatedMarket",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2198,
                      "src": "1763:15:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "74727565",
                      "id": 2280,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1781:4:2",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "1763:22:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2282,
                  "nodeType": "ExpressionStatement",
                  "src": "1763:22:2"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 2283,
                      "name": "PopulatedMarket",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2195,
                      "src": "1798:15:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 2284,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1798:17:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2285,
                  "nodeType": "EmitStatement",
                  "src": "1793:22:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "hexValue": "74727565",
                    "id": 2286,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1831:4:2",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 2264,
                  "id": 2287,
                  "nodeType": "Return",
                  "src": "1824:11:2"
                }
              ]
            },
            "documentation": null,
            "id": 2289,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 2259,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 2258,
                  "name": "canPopulate",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 2212,
                  "src": "1273:11:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1273:11:2"
              },
              {
                "arguments": null,
                "id": 2261,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 2260,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 4095,
                  "src": "1292:9:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1292:9:2"
              }
            ],
            "name": "initialMove",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2257,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2256,
                  "name": "_gcm",
                  "nodeType": "VariableDeclaration",
                  "scope": 2289,
                  "src": "1259:12:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2255,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1259:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1258:14:2"
            },
            "returnParameters": {
              "id": 2264,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2263,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 2289,
                  "src": "1310:4:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 2262,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1310:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1309:6:2"
            },
            "scope": 2290,
            "src": "1238:604:2",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 2291,
        "src": "400:1447:2"
      }
    ],
    "src": "0:1847:2"
  },
  "legacyAST": {
    "absolutePath": "/C/Users/hadarro/Documents/GoodDollar/GoodContracts/contracts/GoodDollar.sol",
    "exportedSymbols": {
      "GoodDollar": [
        2290
      ]
    },
    "id": 2291,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 2174,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:2"
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/math/SafeMath.sol",
        "file": "openzeppelin-solidity/contracts/math/SafeMath.sol",
        "id": 2175,
        "nodeType": "ImportDirective",
        "scope": 2291,
        "sourceUnit": 4053,
        "src": "25:59:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/token/ERC20/ERC20Detailed.sol",
        "file": "openzeppelin-solidity/contracts/token/ERC20/ERC20Detailed.sol",
        "id": 2176,
        "nodeType": "ImportDirective",
        "scope": 2291,
        "sourceUnit": 4683,
        "src": "85:71:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/token/ERC20/ERC20Mintable.sol",
        "file": "openzeppelin-solidity/contracts/token/ERC20/ERC20Mintable.sol",
        "id": 2177,
        "nodeType": "ImportDirective",
        "scope": 2291,
        "sourceUnit": 4711,
        "src": "157:71:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/token/ERC20/ERC20Burnable.sol",
        "file": "openzeppelin-solidity/contracts/token/ERC20/ERC20Burnable.sol",
        "id": 2178,
        "nodeType": "ImportDirective",
        "scope": 2291,
        "sourceUnit": 4625,
        "src": "229:71:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/ownership/Ownable.sol",
        "file": "openzeppelin-solidity/contracts/ownership/Ownable.sol",
        "id": 2179,
        "nodeType": "ImportDirective",
        "scope": 2291,
        "sourceUnit": 4162,
        "src": "301:63:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/C/Users/hadarro/Documents/GoodDollar/GoodContracts/contracts/token/ERC827Token.sol",
        "file": "./token/ERC827Token.sol",
        "id": 2180,
        "nodeType": "ImportDirective",
        "scope": 2291,
        "sourceUnit": 3712,
        "src": "365:33:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 2181,
              "name": "ERC827Token",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 3711,
              "src": "423:11:2",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC827Token_$3711",
                "typeString": "contract ERC827Token"
              }
            },
            "id": 2182,
            "nodeType": "InheritanceSpecifier",
            "src": "423:11:2"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 2183,
              "name": "ERC20Detailed",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 4682,
              "src": "435:13:2",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20Detailed_$4682",
                "typeString": "contract ERC20Detailed"
              }
            },
            "id": 2184,
            "nodeType": "InheritanceSpecifier",
            "src": "435:13:2"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 2185,
              "name": "ERC20Mintable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 4710,
              "src": "449:13:2",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20Mintable_$4710",
                "typeString": "contract ERC20Mintable"
              }
            },
            "id": 2186,
            "nodeType": "InheritanceSpecifier",
            "src": "449:13:2"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 2187,
              "name": "ERC20Burnable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 4624,
              "src": "463:13:2",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20Burnable_$4624",
                "typeString": "contract ERC20Burnable"
              }
            },
            "id": 2188,
            "nodeType": "InheritanceSpecifier",
            "src": "463:13:2"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 2189,
              "name": "Ownable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 4161,
              "src": "478:7:2",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Ownable_$4161",
                "typeString": "contract Ownable"
              }
            },
            "id": 2190,
            "nodeType": "InheritanceSpecifier",
            "src": "478:7:2"
          }
        ],
        "contractDependencies": [
          3479,
          3711,
          3924,
          4161,
          4593,
          4624,
          4682,
          4710,
          4779
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 2290,
        "linearizedBaseContracts": [
          2290,
          4161,
          4624,
          4710,
          3924,
          4682,
          3711,
          3479,
          4593,
          4779
        ],
        "name": "GoodDollar",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 2193,
            "libraryName": {
              "contractScope": null,
              "id": 2191,
              "name": "SafeMath",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 4052,
              "src": "498:8:2",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SafeMath_$4052",
                "typeString": "library SafeMath"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "492:27:2",
            "typeName": {
              "id": 2192,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "511:7:2",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 2195,
            "name": "PopulatedMarket",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 2194,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "546:2:2"
            },
            "src": "525:24:2"
          },
          {
            "constant": false,
            "id": 2198,
            "name": "populatedMarket",
            "nodeType": "VariableDeclaration",
            "scope": 2290,
            "src": "555:35:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 2196,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "555:4:2",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "66616c7365",
              "id": 2197,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "bool",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "585:5:2",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              },
              "value": "false"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 2202,
            "name": "last_claimed",
            "nodeType": "VariableDeclaration",
            "scope": 2290,
            "src": "597:45:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 2201,
              "keyType": {
                "id": 2199,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "606:7:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "597:25:2",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueType": {
                "id": 2200,
                "name": "uint",
                "nodeType": "ElementaryTypeName",
                "src": "617:4:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2211,
              "nodeType": "Block",
              "src": "672:82:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 2206,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "688:16:2",
                        "subExpression": {
                          "argumentTypes": null,
                          "id": 2205,
                          "name": "populatedMarket",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2198,
                          "src": "689:15:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "476f6f64446f6c6c617220616c726561647920696e697469616c697a6564",
                        "id": 2207,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "705:32:2",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_4d04c6d59bb00144ebab58b5bb9ad965ce13baa4920e90d397a09afdf0506643",
                          "typeString": "literal_string \"GoodDollar already initialized\""
                        },
                        "value": "GoodDollar already initialized"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_4d04c6d59bb00144ebab58b5bb9ad965ce13baa4920e90d397a09afdf0506643",
                          "typeString": "literal_string \"GoodDollar already initialized\""
                        }
                      ],
                      "id": 2204,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4797,
                        4798
                      ],
                      "referencedDeclaration": 4798,
                      "src": "680:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2208,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "680:58:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2209,
                  "nodeType": "ExpressionStatement",
                  "src": "680:58:2"
                },
                {
                  "id": 2210,
                  "nodeType": "PlaceholderStatement",
                  "src": "746:1:2"
                }
              ]
            },
            "documentation": null,
            "id": 2212,
            "name": "canPopulate",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 2203,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "669:2:2"
            },
            "src": "649:105:2",
            "visibility": "internal"
          },
          {
            "body": {
              "id": 2253,
              "nodeType": "Block",
              "src": "1016:81:2",
              "statements": [
                {
                  "body": {
                    "expression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 2247,
                            "name": "minters",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2221,
                            "src": "1079:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                              "typeString": "address[] memory"
                            }
                          },
                          "id": 2249,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 2248,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2236,
                            "src": "1087:1:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "1079:10:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 2246,
                        "name": "addMinter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3882,
                        "src": "1069:9:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                          "typeString": "function (address)"
                        }
                      },
                      "id": 2250,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1069:21:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 2251,
                    "nodeType": "ExpressionStatement",
                    "src": "1069:21:2"
                  },
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 2242,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 2239,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2236,
                      "src": "1039:1:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 2240,
                        "name": "minters",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2221,
                        "src": "1041:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      },
                      "id": 2241,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "1041:14:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1039:16:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2252,
                  "initializationExpression": {
                    "assignments": [
                      2236
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 2236,
                        "name": "i",
                        "nodeType": "VariableDeclaration",
                        "scope": 2252,
                        "src": "1028:6:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2235,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "1028:4:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "id": 2238,
                    "initialValue": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 2237,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1037:1:2",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "1028:10:2"
                  },
                  "loopExpression": {
                    "expression": {
                      "argumentTypes": null,
                      "id": 2244,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "1056:3:2",
                      "subExpression": {
                        "argumentTypes": null,
                        "id": 2243,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2236,
                        "src": "1056:1:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 2245,
                    "nodeType": "ExpressionStatement",
                    "src": "1056:3:2"
                  },
                  "nodeType": "ForStatement",
                  "src": "1024:66:2"
                }
              ]
            },
            "documentation": null,
            "id": 2254,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [],
                "id": 2224,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 2223,
                  "name": "ERC20Burnable",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 4624,
                  "src": "910:13:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_ERC20Burnable_$4624_$",
                    "typeString": "type(contract ERC20Burnable)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "910:15:2"
              },
              {
                "arguments": [],
                "id": 2226,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 2225,
                  "name": "ERC20Mintable",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 4710,
                  "src": "934:13:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_ERC20Mintable_$4710_$",
                    "typeString": "type(contract ERC20Mintable)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "934:15:2"
              },
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 2228,
                    "name": "name",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2214,
                    "src": "972:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 2229,
                    "name": "symbol",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2216,
                    "src": "978:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 2230,
                    "name": "decimals",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2218,
                    "src": "986:8:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  }
                ],
                "id": 2231,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 2227,
                  "name": "ERC20Detailed",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 4682,
                  "src": "958:13:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_ERC20Detailed_$4682_$",
                    "typeString": "type(contract ERC20Detailed)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "958:37:2"
              },
              {
                "arguments": [],
                "id": 2233,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 2232,
                  "name": "ERC20",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 4593,
                  "src": "1004:5:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_ERC20_$4593_$",
                    "typeString": "type(contract ERC20)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1004:7:2"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2222,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2214,
                  "name": "name",
                  "nodeType": "VariableDeclaration",
                  "scope": 2254,
                  "src": "782:18:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 2213,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "782:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2216,
                  "name": "symbol",
                  "nodeType": "VariableDeclaration",
                  "scope": 2254,
                  "src": "810:20:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 2215,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "810:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2218,
                  "name": "decimals",
                  "nodeType": "VariableDeclaration",
                  "scope": 2254,
                  "src": "840:14:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 2217,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "840:5:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2221,
                  "name": "minters",
                  "nodeType": "VariableDeclaration",
                  "scope": 2254,
                  "src": "864:24:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 2219,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "864:7:2",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 2220,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "864:9:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "772:122:2"
            },
            "returnParameters": {
              "id": 2234,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1016:0:2"
            },
            "scope": 2290,
            "src": "760:337:2",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2288,
              "nodeType": "Block",
              "src": "1316:526:2",
              "statements": [
                {
                  "assignments": [
                    2266
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2266,
                      "name": "amount",
                      "nodeType": "VariableDeclaration",
                      "scope": 2288,
                      "src": "1679:14:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2265,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1679:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 2273,
                  "initialValue": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_rational_1000000_by_1",
                      "typeString": "int_const 1000000"
                    },
                    "id": 2272,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "hexValue": "313030",
                      "id": 2267,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1696:3:2",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_100_by_1",
                        "typeString": "int_const 100"
                      },
                      "value": "100"
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "*",
                    "rightExpression": {
                      "argumentTypes": null,
                      "components": [
                        {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_rational_10000_by_1",
                            "typeString": "int_const 10000"
                          },
                          "id": 2270,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "hexValue": "3130",
                            "id": 2268,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1701:2:2",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_10_by_1",
                              "typeString": "int_const 10"
                            },
                            "value": "10"
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "**",
                          "rightExpression": {
                            "argumentTypes": null,
                            "hexValue": "34",
                            "id": 2269,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1705:1:2",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_4_by_1",
                              "typeString": "int_const 4"
                            },
                            "value": "4"
                          },
                          "src": "1701:5:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_10000_by_1",
                            "typeString": "int_const 10000"
                          }
                        }
                      ],
                      "id": 2271,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "1700:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_10000_by_1",
                        "typeString": "int_const 10000"
                      }
                    },
                    "src": "1696:11:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_1000000_by_1",
                      "typeString": "int_const 1000000"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1679:28:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 2275,
                        "name": "_gcm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2256,
                        "src": "1741:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 2276,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2266,
                        "src": "1747:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 2274,
                      "name": "mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4709,
                      "src": "1736:4:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) returns (bool)"
                      }
                    },
                    "id": 2277,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1736:18:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2278,
                  "nodeType": "ExpressionStatement",
                  "src": "1736:18:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2281,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 2279,
                      "name": "populatedMarket",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2198,
                      "src": "1763:15:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "74727565",
                      "id": 2280,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1781:4:2",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "1763:22:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2282,
                  "nodeType": "ExpressionStatement",
                  "src": "1763:22:2"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 2283,
                      "name": "PopulatedMarket",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2195,
                      "src": "1798:15:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 2284,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1798:17:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2285,
                  "nodeType": "EmitStatement",
                  "src": "1793:22:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "hexValue": "74727565",
                    "id": 2286,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1831:4:2",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 2264,
                  "id": 2287,
                  "nodeType": "Return",
                  "src": "1824:11:2"
                }
              ]
            },
            "documentation": null,
            "id": 2289,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 2259,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 2258,
                  "name": "canPopulate",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 2212,
                  "src": "1273:11:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1273:11:2"
              },
              {
                "arguments": null,
                "id": 2261,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 2260,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 4095,
                  "src": "1292:9:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1292:9:2"
              }
            ],
            "name": "initialMove",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2257,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2256,
                  "name": "_gcm",
                  "nodeType": "VariableDeclaration",
                  "scope": 2289,
                  "src": "1259:12:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2255,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1259:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1258:14:2"
            },
            "returnParameters": {
              "id": 2264,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2263,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 2289,
                  "src": "1310:4:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 2262,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1310:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1309:6:2"
            },
            "scope": 2290,
            "src": "1238:604:2",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 2291,
        "src": "400:1447:2"
      }
    ],
    "src": "0:1847:2"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.0+commit.1d4f565a.Emscripten.clang"
  },
  "networks": {
    "42": {
      "events": {
        "0x4bd9691b23890469e070218632e0f2ccd47ffa720ac3619fb14ad9dc504cc42e": {
          "anonymous": false,
          "inputs": [],
          "name": "PopulatedMarket",
          "type": "event",
          "signature": "0x4bd9691b23890469e070218632e0f2ccd47ffa720ac3619fb14ad9dc504cc42e"
        },
        "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "name": "previousOwner",
              "type": "address"
            },
            {
              "indexed": true,
              "name": "newOwner",
              "type": "address"
            }
          ],
          "name": "OwnershipTransferred",
          "type": "event",
          "signature": "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0"
        },
        "0x6ae172837ea30b801fbfcdd4108aa1d5bf8ff775444fd70256b44e6bf3dfc3f6": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "name": "account",
              "type": "address"
            }
          ],
          "name": "MinterAdded",
          "type": "event",
          "signature": "0x6ae172837ea30b801fbfcdd4108aa1d5bf8ff775444fd70256b44e6bf3dfc3f6"
        },
        "0xe94479a9f7e1952cc78f2d6baab678adc1b772d936c6583def489e524cb66692": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "name": "account",
              "type": "address"
            }
          ],
          "name": "MinterRemoved",
          "type": "event",
          "signature": "0xe94479a9f7e1952cc78f2d6baab678adc1b772d936c6583def489e524cb66692"
        },
        "0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "name": "from",
              "type": "address"
            },
            {
              "indexed": true,
              "name": "to",
              "type": "address"
            },
            {
              "indexed": false,
              "name": "value",
              "type": "uint256"
            }
          ],
          "name": "Transfer",
          "type": "event",
          "signature": "0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef"
        },
        "0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "name": "owner",
              "type": "address"
            },
            {
              "indexed": true,
              "name": "spender",
              "type": "address"
            },
            {
              "indexed": false,
              "name": "value",
              "type": "uint256"
            }
          ],
          "name": "Approval",
          "type": "event",
          "signature": "0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925"
        }
      },
      "links": {},
      "address": "0x7cb2996Fd8A5B4969F28FA0bA8bB52D8923BbF6F",
      "transactionHash": "0x202d20df9102df02b0332e0eb2b1db81469898f0ba9bd6ba6dcf8958c3d62c71"
    },
    "4447": {
      "events": {
        "0x4bd9691b23890469e070218632e0f2ccd47ffa720ac3619fb14ad9dc504cc42e": {
          "anonymous": false,
          "inputs": [],
          "name": "PopulatedMarket",
          "type": "event",
          "signature": "0x4bd9691b23890469e070218632e0f2ccd47ffa720ac3619fb14ad9dc504cc42e"
        },
        "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "name": "previousOwner",
              "type": "address"
            },
            {
              "indexed": true,
              "name": "newOwner",
              "type": "address"
            }
          ],
          "name": "OwnershipTransferred",
          "type": "event",
          "signature": "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0"
        },
        "0x6ae172837ea30b801fbfcdd4108aa1d5bf8ff775444fd70256b44e6bf3dfc3f6": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "name": "account",
              "type": "address"
            }
          ],
          "name": "MinterAdded",
          "type": "event",
          "signature": "0x6ae172837ea30b801fbfcdd4108aa1d5bf8ff775444fd70256b44e6bf3dfc3f6"
        },
        "0xe94479a9f7e1952cc78f2d6baab678adc1b772d936c6583def489e524cb66692": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "name": "account",
              "type": "address"
            }
          ],
          "name": "MinterRemoved",
          "type": "event",
          "signature": "0xe94479a9f7e1952cc78f2d6baab678adc1b772d936c6583def489e524cb66692"
        },
        "0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "name": "from",
              "type": "address"
            },
            {
              "indexed": true,
              "name": "to",
              "type": "address"
            },
            {
              "indexed": false,
              "name": "value",
              "type": "uint256"
            }
          ],
          "name": "Transfer",
          "type": "event",
          "signature": "0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef"
        },
        "0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "name": "owner",
              "type": "address"
            },
            {
              "indexed": true,
              "name": "spender",
              "type": "address"
            },
            {
              "indexed": false,
              "name": "value",
              "type": "uint256"
            }
          ],
          "name": "Approval",
          "type": "event",
          "signature": "0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925"
        }
      },
      "links": {},
      "address": "0x72DAC137428F1e95b78EBa6c31a262b454B10D8a",
      "transactionHash": "0x0722b96e2a3ff3b01cec55d9f714680899d374492d8cdc9fe44da3ba37aad921"
    }
  },
  "schemaVersion": "3.0.1",
  "updatedAt": "2019-02-05T13:03:12.769Z",
  "devdoc": {
    "methods": {
      "allowance(address,address)": {
        "details": "Function to check the amount of tokens that an owner allowed to a spender.",
        "params": {
          "owner": "address The address which owns the funds.",
          "spender": "address The address which will spend the funds."
        },
        "return": "A uint256 specifying the amount of tokens still available for the spender."
      },
      "approve(address,uint256)": {
        "details": "Approve the passed address to spend the specified amount of tokens on behalf of msg.sender. Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729",
        "params": {
          "spender": "The address which will spend the funds.",
          "value": "The amount of tokens to be spent."
        }
      },
      "approveAndCall(address,uint256,bytes)": {
        "details": "Addition to IERC20 token methods. It allows to approve the transfer of value and execute a call with the sent data. Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729",
        "params": {
          "_data": "ABI-encoded contract call to call `_spender` address.",
          "_spender": "The address that will spend the funds.",
          "_value": "The amount of tokens to be spent."
        },
        "return": "true if the call function was executed successfully"
      },
      "balanceOf(address)": {
        "details": "Gets the balance of the specified address.",
        "params": {
          "owner": "The address to query the balance of."
        },
        "return": "An uint256 representing the amount owned by the passed address."
      },
      "burn(uint256)": {
        "details": "Burns a specific amount of tokens.",
        "params": {
          "value": "The amount of token to be burned."
        }
      },
      "burnFrom(address,uint256)": {
        "details": "Burns a specific amount of tokens from the target address and decrements allowance",
        "params": {
          "from": "address The address which you want to send tokens from",
          "value": "uint256 The amount of token to be burned"
        }
      },
      "decimals()": {
        "return": "the number of decimals of the token."
      },
      "decreaseAllowance(address,uint256)": {
        "details": "Decrease the amount of tokens that an owner allowed to a spender. approve should be called when allowed_[_spender] == 0. To decrement allowed value is better to use this function to avoid 2 calls (and wait until the first transaction is mined) From MonolithDAO Token.sol Emits an Approval event.",
        "params": {
          "spender": "The address which will spend the funds.",
          "subtractedValue": "The amount of tokens to decrease the allowance by."
        }
      },
      "decreaseApprovalAndCall(address,uint256,bytes)": {
        "details": "Addition to IERC20 methods. Decrease the amount of tokens that an owner allowed to a spender and execute a call with the sent data. approve should be called when allowed[_spender] == 0. To decrement allowed value is better to use this function to avoid 2 calls (and wait until the first transaction is mined) From MonolithDAO Token.sol",
        "params": {
          "_data": "ABI-encoded contract call to call `_spender` address.",
          "_spender": "The address which will spend the funds.",
          "_subtractedValue": "The amount of tokens to decrease the allowance by."
        }
      },
      "increaseAllowance(address,uint256)": {
        "details": "Increase the amount of tokens that an owner allowed to a spender. approve should be called when allowed_[_spender] == 0. To increment allowed value is better to use this function to avoid 2 calls (and wait until the first transaction is mined) From MonolithDAO Token.sol Emits an Approval event.",
        "params": {
          "addedValue": "The amount of tokens to increase the allowance by.",
          "spender": "The address which will spend the funds."
        }
      },
      "increaseApprovalAndCall(address,uint256,bytes)": {
        "details": "Addition to IERC20 methods. Increase the amount of tokens that an owner allowed to a spender and execute a call with the sent data. approve should be called when allowed[_spender] == 0. To increment allowed value is better to use this function to avoid 2 calls (and wait until the first transaction is mined) From MonolithDAO Token.sol",
        "params": {
          "_addedValue": "The amount of tokens to increase the allowance by.",
          "_data": "ABI-encoded contract call to call `_spender` address.",
          "_spender": "The address which will spend the funds."
        }
      },
      "isOwner()": {
        "return": "true if `msg.sender` is the owner of the contract."
      },
      "mint(address,uint256)": {
        "details": "Function to mint tokens",
        "params": {
          "to": "The address that will receive the minted tokens.",
          "value": "The amount of tokens to mint."
        },
        "return": "A boolean that indicates if the operation was successful."
      },
      "name()": {
        "return": "the name of the token."
      },
      "owner()": {
        "return": "the address of the owner."
      },
      "renounceOwnership()": {
        "details": "Allows the current owner to relinquish control of the contract."
      },
      "symbol()": {
        "return": "the symbol of the token."
      },
      "totalSupply()": {
        "details": "Total number of tokens in existence"
      },
      "transfer(address,uint256)": {
        "details": "Transfer token for a specified address",
        "params": {
          "to": "The address to transfer to.",
          "value": "The amount to be transferred."
        }
      },
      "transferAndCall(address,uint256,bytes)": {
        "details": "Addition to IERC20 token methods. Transfer tokens to a specified address and execute a call with the sent data on the same transaction",
        "params": {
          "_data": "ABI-encoded contract call to call `_to` address.",
          "_to": "address The address which you want to transfer to",
          "_value": "uint256 the amout of tokens to be transfered"
        },
        "return": "true if the call function was executed successfully"
      },
      "transferFrom(address,address,uint256)": {
        "details": "Transfer tokens from one address to another. Note that while this function emits an Approval event, this is not required as per the specification, and other compliant implementations may not emit the event.",
        "params": {
          "from": "address The address which you want to send tokens from",
          "to": "address The address which you want to transfer to",
          "value": "uint256 the amount of tokens to be transferred"
        }
      },
      "transferFromAndCall(address,address,uint256,bytes)": {
        "details": "Addition to IERC20 token methods. Transfer tokens from one address to another and make a contract call on the same transaction",
        "params": {
          "_data": "ABI-encoded contract call to call `_to` address.",
          "_from": "The address which you want to send tokens from",
          "_to": "The address which you want to transfer to",
          "_value": "The amout of tokens to be transferred"
        },
        "return": "true if the call function was executed successfully"
      },
      "transferOwnership(address)": {
        "details": "Allows the current owner to transfer control of the contract to a newOwner.",
        "params": {
          "newOwner": "The address to transfer ownership to."
        }
      }
    }
  },
  "userdoc": {
    "methods": {
      "renounceOwnership()": {
        "notice": "Renouncing to ownership will leave the contract without an owner. It will not be possible to call the functions with the `onlyOwner` modifier anymore."
      }
    }
  }
}